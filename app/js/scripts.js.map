{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/js/config.json",
    "src/js/core/Boxes.js",
    "src/js/core/Globals.js",
    "src/js/core/Home.js",
    "src/js/core/Utils.js",
    "src/js/game/Character.js",
    "src/js/game/Dialog.js",
    "src/js/game/Map.js",
    "src/js/game/StartGame.js",
    "src/js/index.js",
    "src/js/states/Boot.js",
    "src/js/states/ForestBottomLeft.js",
    "src/js/states/ForestBottomMiddle.js",
    "src/js/states/ForestBottomRight.js",
    "src/js/states/ForestMiddleLeft.js",
    "src/js/states/ForestMiddleRight.js",
    "src/js/states/ForestTopLeft.js",
    "src/js/states/ForestTopMiddle.js",
    "src/js/states/ForestTopRight.js",
    "src/js/states/House01.js",
    "src/js/states/House02.js",
    "src/js/states/MapState.js",
    "src/js/states/UselessCity.js",
    "src/js/states/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "module.exports={\n\t\"apiURL\": \"http://localhost:8080/\"\n}\n",
    "/**\n* FormBoxes handling component\n*\n**/\nexport default class Boxes {\n\tconstructor(trigger, target) {\n\t\tthis.trigger = trigger;\n\t\tthis.target = target;\n\n\t\tthis.bindEvents();\n\t}\n\n\t//binds events to elements according to the selector passed as parameter\n\tbindEvents() {\n\t\tlet _this = this,\n\t\t\t\tboxes = $(this.trigger),\n\t\t\t\toverlay = $('.overlay');\n\n\t\tboxes.each(function() {\n\t\t\tlet href = $(this).data(\"target\"),\n\t\t\t\t\tactualSection = $(href),\n\t\t\t\t\tclose = actualSection.find('.formbox__close');\n\n\t\t\tclose.click((e) => {\n\t\t\t\te.preventDefault();\n\n\t\t\t\toverlay.addClass('hide');\n\t\t\t\tactualSection.removeClass('active');\n\t\t\t});\n\n\t\t\toverlay.click(() => {\n\t\t\t\toverlay.addClass('hide');\n\t\t\t\tactualSection.removeClass('active');\n\t\t\t});\n\n\t\t\t$(this).click((e) => {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t_this.closeAll();\n\n\t\t\t\toverlay.removeClass('hide');\n\n\t\t\t\tactualSection.addClass('active');\n\t\t\t});\n\t\t});\n\t}\n\n\tcloseAll() {\n\t\tlet boxes = $('.formbox');\n\n\t\tboxes.each(function() {\n\t\t\t$(this).removeClass('active');\n\t\t});\n\n\t\t$('.overlay').addClass('hide');\n\t}\n}\n",
    "const GLOBALS = {\n  PLAYER: 'player',\n  NPC: 'NPC',\n  ENEMY: 'enemy',\n\n  SWORDSMAN: 'SwordsMan',\n  MAGE: 'Mage',\n  ARCHER: 'Archer',\n\n  ENEMIES: {\n    SLIME: 'Slime',\n    MUSHROOM: 'Mushroom'\n  },\n\n  MAPS: {\n    FOREST_TOP_LEFT: 'forest_top_left',\n    FOREST_TOP_MIDDLE: 'forest_top_middle',\n    FOREST_TOP_RIGHT: 'forest_top_right',\n    FOREST_MIDDLE_LEFT: 'forest_middle_left',\n    FOREST_MIDDLE_RIGHT: 'forest_middle_right',\n    FOREST_BOTTOM_LEFT: 'forest_bottom_left',\n    FOREST_BOTTOM_MIDDLE: 'forest_bottom_middle',\n    FOREST_BOTTOM_RIGHT: 'forest_bottom_right',\n    USELESS_CITY: 'useless_city',\n    HOUSE_01: 'house_01',\n    HOUSE_02: 'house_02'\n  },\n\n  MUSICS: {\n    SAD_TOWN: 'SadTown',\n    SAD_DESCENT: 'SadDescent'\n  },\n\n  DIRECTIONS: {\n    UP: 'top',\n    DOWN: 'down',\n    LEFT: 'left',\n    RIGHT: 'right',\n    STOP: 'stop'\n  },\n\n  TEXT_STYLES: {\n    DAMAGE: { font: \"14px FreePixel\", fontWeight: 'Bold', fill: \"#000\", wordWrap: true, wordWrapWidth: 32, align: \"center\" },\n    DEAD: { font: \"20px FreePixel\", fontWeight: 'Bold', fill: \"#fff\", align: \"center\" },\n    LOADING: { font: \"18px FreePixel\", fill: \"#fff\"}\n  },\n\n  KEY_CODES: {\n    ENTER: 13,\n    A: 65\n  }\n}\n\nexport default GLOBALS;\n",
    "/**\n* Homepage handling component\n*\n**/\nimport config from 'config';\nimport Utils from './Utils';\nimport Boxes from './Boxes';\nimport StartGame from '../game/StartGame';\n\nexport default class Home {\n\tconstructor() {\n\t\tthis.boxes = new Boxes('.open-formbox', '.formbox');\n\n\t\tthis.formsSelector = \".form\";\n\n    this.isChrome = Utils.isChrome();\n\n\t\tthis.menuNotLogged = $('.menu--not-logged');\n\t\tthis.loggedMenu = $('.menu--logged');\n\n\t\tthis.notLoggedText = $('.not-logged--text');\n\t\tthis.loggedText = $('.logged--text');\n\n\t\tthis.loggedInfo = $('.logged--info');\n\n    $('.tooltip').tooltipster({\n      contentAsHTML: true\n    });\n\n\t\tthis.bindEvents();\n\t\tthis.checkLogin();\n\n    if(!this.isChrome) {\n      $('.footer').removeClass('hide');\n    }\n\t}\n\n\tbindEvents() {\n\t\tconst _this = this,\n\t\t\t\t  forms = $(this.formsSelector);\n\n\t\tforms.each(function() {\n\t\t\tconst form = $(this),\n            formTarget = form.data(\"target\"),\n            result = form.find('.formbox__result');\n\n\t\t\tform.submit(function(e) {\n\t\t\t\tconst data = Utils.serializeObject($(this));\n\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif(!_this.validation(formTarget, form, result)) {\n\t\t\t\t\t_this.ajaxPOST(formTarget, result, data);\n\t\t\t\t\t_this.cleanForms(form, formTarget, result);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$('.logout').click(function() {\n\t\t\t_this.logout();\n\t\t});\n\n\t\t$('.character__wrapper').on('click', '.character', function(e) {\n\t\t\tconst characterId = $(this).data('character-id');\n\n\t\t  localStorage.setItem('NWarriorCharID', characterId);\n\n\t\t\t_this.boxes.closeAll();\n\n\t\t\t$('.content').addClass('hide');\n\t\t\t$('.game__wrapper').removeClass('hide');\n\n\t\t\tnew StartGame();\n\t\t});\n\t}\n\n\tvalidation(target, form, result) {\n\t\tlet invalid = false;\n\n\t\tswitch(target) {\n\t\t\tcase 'users' :\n\t\t\t\tconst password = form.find('[name=signupPassword]').val(),\n\t\t\t\t\t\t  repeatPassword = form.find('[name=signupRepeatPassword]').val();\n\n\t\t\t  if (password != repeatPassword) {\n          result.html('The passwords must be equal!');\n          invalid = true;\n        }\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'characters':\n\t\t\t\tconst remainingStats = form.find('.remaining-stats').html(),\n              selectedClass = form.find('[name=\"characterClass\"]').val();\n\n\t\t\t\tif(selectedClass === \"\") {\n          result.html('You must select a character class!');\n\t\t\t\t\tinvalid = true;\n        } else if(remainingStats != 0) {\n\t\t\t\t\tresult.html('You must distribute all attributes!');\n\t\t\t\t\tinvalid = true;\n\t\t    }\n\n\t\t\t\tbreak;\n    }\n\n\t\treturn invalid;\n\t}\n\n\tcleanForms(form, target) {\n\t\tform.find('input[type=text]:not([readonly])').val('');\n\n\t\tswitch(target) {\n\t\t\tcase 'characters':\n\t\t\t\tform.find('.stats__input').val(5);\n\t\t\t\tform.find('.stats__counter').val(10);\n        form.find('.formbox__group__character').addClass('active');\n        form.find('[name=characterClass]').val('');\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tajaxPOST(target, result, data) {\n\t\tconst _this = this,\n          loader = $('.loader'),\n          url = config.apiURL+target;\n\n\t\tloader.addClass('active');\n\n\t\tdata.token = localStorage.getItem('NWarriorToken');\n\n\t\t$.ajax({\n\t\t\ttype: \"POST\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: function(data) {\n\t\t    loader.removeClass('active');\n\n\t\t  \tif(data.failedAuth) {\n\t\t    \treturn _this.logout();\n\t\t    }\n\n\t\t    switch(target) {\n\t\t    \tcase 'users':\n\t\t    \t\t_this.handleSignUp(data, result);\n\t\t    \t\tbreak;\n\n\t\t    \tcase 'users/login':\n\t\t    \t\t_this.handleLogin(data, result);\n\t\t    \t\tbreak;\n\n\t\t    \tcase 'characters':\n\t\t    \t\t_this.handleCharacterCreation(data, result);\n\t\t    \t\tbreak;\n\t\t    }\n\t\t\t},\n\t\t\terror: function(xhr, errorType, error) {\n\t\t\t\tif(errorType == 403)\n\t\t\t\t\t_this.logout();\n\t\t\t}\n\t\t});\n\t}\n\n\thandleSignUp(data, result) {\n\t\tresult.html(data.message);\n\n\t\tif(data.created) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.boxes.closeAll();\n\t\t\t\t$('[data-target=\"#formbox-login\"]').click();\n\t\t\t}, 500);\n\t\t}\n\t}\n\n\thandleLogin(data, result) {\n\t\tresult.html(data.message);\n\n\t\tif(data.logged) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.boxes.closeAll();\n\t\t\t}, 500);\n\n\t\t\tthis.saveSession(data);\n\t\t\tthis.checkLogin();\n\t\t}\n\t}\n\n\tsaveSession(data) {\n\t\tlocalStorage.setItem('NWarriorUserID', data.userId);\n\t\tlocalStorage.setItem('NWarriorEmail', data.email);\n    localStorage.setItem('NWarriorToken', data.token);\n\t}\n\n\tcheckLogin() {\n\t\tif(localStorage.getItem('NWarriorToken')) {\n\t\t\tthis.loggedInfo.find('span').html(localStorage.getItem('NWarriorEmail'));\n\n\t\t\tthis.loggedMenu.removeClass('hide');\n\t\t\tthis.loggedText.removeClass('hide');\n\t\t\tthis.loggedInfo.removeClass('hide');\n\t\t\tthis.menuNotLogged.addClass('hide');\n\t\t\tthis.notLoggedText.addClass('hide');\n\n\t\t\tthis.setupCharacterCreation();\n\t\t\tthis.updateCharacterList();\n\t\t} else {\n\t\t\tthis.loggedMenu.addClass('hide');\n\t\t\tthis.loggedText.addClass('hide');\n\t\t\tthis.loggedInfo.addClass('hide');\n\t\t\tthis.menuNotLogged.removeClass('hide');\n\t\t\tthis.notLoggedText.removeClass('hide');\n\t\t}\n\t}\n\n\tsetupCharacterCreation() {\n\t\tconst form = $('[name=\"form_create\"]'),\n          selectedClass = form.find('[name=\"characterClass\"]'),\n          stats = form.find('.stats__group'),\n          remainingStats = form.find('.remaining-stats');\n\n\t\t$('.formbox__group__character').on('click', (e) => {\n      const currentClass = $(e.currentTarget),\n            classNumber = currentClass.data('characterClass');\n\n      $('.formbox__group__character').removeClass('active');\n      currentClass.addClass('active');\n      selectedClass.val(classNumber);\n    });\n\n\t\tstats.each(function() {\n\t\t\tconst\tstatsGroup = $(this),\n            plusButton = statsGroup.find('.stats__btn--plus'),\n            minusButton = statsGroup.find('.stats__btn--minus'),\n            statsInput = statsGroup.find('.stats__input');\n\n\t\t\tplusButton.click(function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tlet remainingStatsVal = remainingStats.html(),\n\t\t\t\t\t\tstatsVal = statsInput.val();\n\n\t\t\t\tif(remainingStatsVal > 0) {\n\t\t\t\t\tstatsVal++;\n\n\t\t\t\t\tstatsInput.val(statsVal);\n\n\t\t\t\t\tremainingStatsVal--;\n\n\t\t\t\t\tremainingStats.html(remainingStatsVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tminusButton.click(function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tlet remainingStatsVal = remainingStats.html(),\n\t\t\t\t\t\tstatsVal = statsInput.val();\n\n\t\t\t\tif(remainingStatsVal < 10 && statsVal > 5) {\n\t\t\t\t\tstatsVal--;\n\n\t\t\t\t\tstatsInput.val(statsVal);\n\t\t\t\t\tremainingStatsVal++;\n\n\t\t\t\t\tremainingStats.html(remainingStatsVal);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$('[name=userId]').val(localStorage.getItem('NWarriorUserID'));\n\t}\n\n\thandleCharacterCreation(data, result) {\n\t\tresult.html(data.message);\n\n\t\tsetTimeout(() => {\n\t\t\tthis.boxes.closeAll();\n\t\t\t$('[data-target=\"#formbox-select\"]').click();\n\t\t\tresult.html('');\n      $('.remaining-stats').html(10);\n\t\t}, 500);\n\n\t\tthis.updateCharacterList();\n\t}\n\n\tupdateCharacterList() {\n\t\tconst _this = this,\n          loader = $('.loader'),\n          userId = localStorage.getItem('NWarriorUserID'),\n          url = config.apiURL+'characters/byUser/'+userId,\n          characterList = $('.character__wrapper');\n\n\t\tloader.addClass('active');\n\n\t\t$('.character__wrapper > *').remove();\n\n\t\tUtils.getTemplate('characterSelection', function(template) {\n\t\t\tconst characterTemplate = template;\n\n\t\t  let\tdata = {};\n\n\t\t\tdata.token = localStorage.getItem('NWarriorToken');\n\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\ttype: \"get\",\n\t\t\t\tdata: data,\n\t\t\t\tsuccess: (data) => {\n\t\t\t    loader.removeClass('active');\n\n\t\t\t    if(data.length) {\n\t\t\t\t    for (let i in data) {\n\t\t\t\t    \tlet character = data[i],\n\t\t\t\t\t\t\t\t\ttemplate = characterTemplate;\n\n\t\t\t\t\t\t\ttemplate = template.replace('{LastSaved}', Utils.formatDate(character.updatedAt));\n\t\t\t\t\t\t\ttemplate = template.replace('{CharacterClass}', Utils.formatClass(character.characterClass));\n\t\t\t\t\t\t\ttemplate = template.replace('{Strength}', character.strength);\n\t\t\t\t\t\t\ttemplate = template.replace('{Constitution}', character.constitution);\n\t\t\t\t\t\t\ttemplate = template.replace('{Dexterity}', character.dexterity);\n\t\t\t\t\t\t\ttemplate = template.replace('{Intelligence}', character.intelligence);\n\t\t\t\t\t\t\ttemplate = template.replace('{Charisma}', character.charisma);\n\t\t\t\t\t\t\ttemplate = template.replace('{ClassImg}', character.characterClass);\n\n\t\t\t\t\t\t\tcharacterList.append('<div class=\"character\" data-character-id=\"'+character._id+'\">'+template+'</div>');\n\t\t\t\t    }\n\t\t\t    } else {\n\t\t\t    \tcharacterList.append('<p>No characters found! Press \"New Character\" to create your first!</p>')\n\t\t\t    }\n\t\t\t  },\n\t\t\t\terror: function(xhr, errorType, error) {\n\t\t\t\t\t_this.logout();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tlogout() {\n\t\tlocalStorage.clear();\n\t\tlocation.reload();\n\t}\n}\n",
    "import GLOBALS from '../core/Globals';\n\nexport default class Utils {\n  static formatClass(characterClass) {\n    let classString;\n\n    switch(characterClass) {\n      case 1:\n        classString = GLOBALS.SWORDSMAN;\n        break;\n\n      case 2:\n        classString = GLOBALS.MAGE;\n        break;\n\n      case 3:\n        classString = GLOBALS.ARCHER;\n        break;\n    }\n\n    return classString;\n  }\n\n  static getTemplate(template, cb) {\n    $.get('templates/'+template+'.html', (response) => {\n      cb(response);\n    });\n  }\n\n  static serializeObject(obj) {\n    let o = {},\n        a = obj.serializeArray();\n\n    $.each(a, function() {\n      if (o[this.name]) {\n        if (!o[this.name].push) {\n            o[this.name] = [o[this.name]];\n        }\n        o[this.name].push(this.value || '');\n      } else {\n        o[this.name] = this.value || '';\n      }\n    });\n\n    return o;\n  };\n\n  static humanize(str) {\n    let frags = str.split('_');\n    for (let i = 0; i < frags.length; i++) {\n      frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n    }\n    return frags.join('');\n  }\n\n  static formatDate(timestamp) {\n    const date = new Date(timestamp),\n          day = date.getDate(),\n          month = date.getMonth() + 1,\n          year = date.getFullYear(),\n          hours = date.getHours(),\n          minutes = date.getMinutes();\n\n    return month+'-'+day+'-'+year+' '+hours+':'+minutes;\n  }\n\n  static addZero(number) {\n    return ('0' + Number(number).toFixed(0)).slice(-2);\n  }\n\n  static isChrome() {\n    return /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport config from 'config';\nimport Utils from '../core/Utils';\n\nexport default class Character extends Phaser.Sprite {\n\tconstructor(game, data, type = GLOBALS.PLAYER, x, y, map) {\n\t\tsuper(game, x, y, data.characterClass);\n\n    this.anchor.setTo(0.5, 0.5);\n\n    this.map = map;\n    this.mapBorderThreshold = 100;\n\n    this.lastDirection = GLOBALS.DIRECTIONS.DOWN;\n\n    this.textY = 12;\n\n    this.type = type;\n    this.frame = 0;\n    this.alive = true;\n    this.playerNear = false;\n\n\t\tthis.setCharacterInfo(data);\n\n    if(this.characterClass === GLOBALS.ARCHER) {\n      this.arrows = [];\n    }\n\t}\n\n\tsetCharacterInfo(data, update = false) {\n    data = data || this;\n\n    this.classNumber = data.classNumber;\n\t\tthis.characterClass = data.characterClass;\n\n\t\tthis.strength = data.strength;\n\t\tthis.strengthXP = data.strengthXP;\n\t\tthis.constitution = data.constitution;\n\t\tthis.constitutionXP = data.constitutionXP;\n\t\tthis.dexterity = data.dexterity;\n\t\tthis.dexterityXP = data.dexterityXP;\n\t\tthis.intelligence = data.intelligence;\n\t\tthis.intelligenceXP = data.intelligenceXP;\n\t\tthis.charisma = data.charisma;\n\t\tthis.charismaXP = data.charismaXP;\n\n    this.firstDialog = data.firstDialog;\n\n    this.gameTimeHours = data.gameTimeHours;\n    this.gameTimeMinutes = data.gameTimeMinutes;\n\n\t\tthis.health = data.health;\n\t\tthis.currentHealth = data.currentHealth;\n\t\tthis.mana = data.mana;\n\t\tthis.currentMana = data.currentMana;\n\n    this.isHostile = data.isHostile;\n\n    this.updatedAt = data.updatedAt;\n\n\t  this.speed = 220 + (this.dexterity * 2);\n\n    if(!update) {\n\t\t  this.create();\n    }\n\n    if(this.type === GLOBALS.PLAYER) {\n      this.updateCharacterStatusFormbox();\n    }\n\t}\n\n  bind() {\n    if(!this.map.isCity) {\n      $(window).on('keydown', ev => {\n        const key = ev.keyCode;\n\n        if(key === GLOBALS.KEY_CODES.A) {\n          if(!this.attacking) {\n            this.attack();\n          }\n        }\n      });\n\n      this.setupAttackEndCallback();\n    }\n  }\n\n\tcreate() {\n\t\tthis.game.add.existing(this);\n\t  this.game.physics.arcade.enable(this);\n\t  this.body.collideWorldBounds = true;\n\n    if(this.type === GLOBALS.PLAYER) {\n\t    this.game.camera.follow(this);\n    }\n\n\t  this.setupAnimations();\n\n    if(this.type === GLOBALS.ENEMY) {\n      this.body.immovable = true;\n      this.randomWalk();\n    }\n\n    if(this.type === GLOBALS.PLAYER) {\n      this.bind();\n    }\n\t}\n\n\tupdate() {\n    if(this.type === GLOBALS.PLAYER) {\n      if(!this.healing && this.currentHealth !== this.health && this.alive && !this.inCombat) {\n        this.currentHealth++;\n        this.healing = true;\n\n        setTimeout(() => {\n          this.healing = false;\n        }, 1000);\n      }\n\n      if(!this.alive) {\n        this.animations.play('dead');\n        this.body.velocity.x = 0;\n        this.body.velocity.y = 0;\n      } else {\n        this.handleWalking();\n\n        if(this.arrows) {\n          this.handleArrows();\n        }\n      }\n\n      this.updateBars();\n    }\n\n    if(this.text && this.body && this.alive) {\n      this.textY -= 1;\n\n      this.text.x = Math.floor(this.body.x + this.body.width / 2);\n      this.text.y = Math.floor(this.body.y + this.body.height / 2 + this.textY);\n    }\n\t}\n\n\tupdateBars() {\n\t\tconst hpVal = $('.bar--health .bar__value'),\n          hpTxt = $('.bar--health .bar__text span'),\n          mpVal = $('.bar--mana .bar__value'),\n          mpTxt = $('.bar--mana .bar__text span');\n\n    let hpPercentage = (this.currentHealth / (this.health * 100)) * 10000;\n\n    hpPercentage = hpPercentage.toFixed(0)+\"%\";\n    hpVal.css('width', hpPercentage);\n\n\t\thpTxt.html(this.currentHealth+'/'+this.health);\n\t\tmpTxt.html(this.currentMana+'/'+this.mana);\n\t}\n\n\thandleWalking() {\n\t  const speed = this.speed;\n\t  let direction;\n\n    if(this.attacking) {\n      this.body.velocity.x = 0;\n      this.body.velocity.y = 0;\n      return;\n    }\n\n\t\tif (this.game.input.keyboard.isDown(Phaser.Keyboard.LEFT)) {\n\t    direction = GLOBALS.DIRECTIONS.LEFT;\n\t  } else if (this.game.input.keyboard.isDown(Phaser.Keyboard.RIGHT)) {\n\t    direction = GLOBALS.DIRECTIONS.RIGHT;\n\t  } else if (this.game.input.keyboard.isDown(Phaser.Keyboard.UP)) {\n\t    direction = GLOBALS.DIRECTIONS.UP;\n\t  } else if (this.game.input.keyboard.isDown(Phaser.Keyboard.DOWN)) {\n\t    direction = GLOBALS.DIRECTIONS.DOWN;\n\t  } else {\n\t    direction = GLOBALS.DIRECTIONS.STOP;\n\t  }\n\n    if(!this.receivingAttack) {\n\t\t  this.walk(direction, speed);\n    }\n\t}\n\n  handleArrows() {\n    const speed = this.dexterity * 1.25;\n\n    this.arrows.forEach((arrow) => {\n      if(!arrow.destroyed) {\n        switch(arrow.direction) {\n          case GLOBALS.DIRECTIONS.UP:\n            arrow.object.y -= speed;\n            break;\n          case GLOBALS.DIRECTIONS.DOWN:\n            arrow.object.y += speed;\n            break;\n          case GLOBALS.DIRECTIONS.LEFT:\n            arrow.object.x -= speed;\n            break;\n          case GLOBALS.DIRECTIONS.RIGHT:\n            arrow.object.x += speed;\n            break;\n        }\n\n        if((arrow.object.y <= 0) || (arrow.object.y >= this.map.width) || (arrow.object.x <= 0) || (arrow.object.x >= this.map.height)) {\n          arrow.object.destroy();\n          arrow.destroyed = true;\n          arrow = null;\n        }\n      }\n    });\n  }\n\n\tsetupAnimations() {\n    if(this.type === GLOBALS.PLAYER) {\n      this.animations.add('dead', [0, 1, 2], 3, true);\n      this.animations.add(GLOBALS.DIRECTIONS.DOWN, [0, 1, 2], 10, false);\n      this.animations.add(GLOBALS.DIRECTIONS.RIGHT, [3, 4, 5], 10, false);\n      this.animations.add(GLOBALS.DIRECTIONS.UP, [6, 7, 8], 10, false);\n      this.animations.add(GLOBALS.DIRECTIONS.LEFT, [9, 10, 11], 10, false);\n    } else if (this.type === GLOBALS.ENEMY) {\n      this.animations.add(GLOBALS.DIRECTIONS.DOWN, [0, 1, 2], 10, true);\n      this.animations.add(GLOBALS.DIRECTIONS.RIGHT, [3, 4, 5], 10, true);\n      this.animations.add(GLOBALS.DIRECTIONS.UP, [6, 7, 8], 10, true);\n      this.animations.add(GLOBALS.DIRECTIONS.LEFT, [9, 10, 11], 10, true);\n    }\n  }\n\n  turnSprite(direction) {\n    let frame;\n\n    switch(direction) {\n      case GLOBALS.DIRECTIONS.UP:\n        frame = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        frame = 3;\n        break;\n\n      case GLOBALS.DIRECTIONS.DOWN:\n        frame = 6;\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        frame = 9;\n        break;\n    }\n\n    this.frame = frame;\n  }\n\n  walk(direction, speed = 50) {\n    switch(direction){\n      case GLOBALS.DIRECTIONS.DOWN:\n        this.lastFrame = 0;\n        this.lastDirection = GLOBALS.DIRECTIONS.DOWN;\n        this.body.velocity.y = speed;\n        this.body.velocity.x = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        this.lastFrame = 3;\n        this.lastDirection = GLOBALS.DIRECTIONS.RIGHT;\n        this.body.velocity.y = 0;\n        this.body.velocity.x = speed;\n        break;\n\n      case GLOBALS.DIRECTIONS.UP:\n        this.lastFrame = 6;\n        this.lastDirection = GLOBALS.DIRECTIONS.UP;\n        this.body.velocity.y = -speed;\n        this.body.velocity.x = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        this.lastFrame = 9;\n        this.lastDirection = GLOBALS.DIRECTIONS.LEFT;\n        this.body.velocity.x = -speed;\n        this.body.velocity.y = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.STOP:\n        if(!this.attacking) {\n          this.body.velocity.x = 0;\n          this.body.velocity.y = 0;\n          this.frame = this.lastFrame;\n          this.animations.stop();\n        }\n\n        break;\n    }\n\n    this.animations.play(direction);\n  }\n\n  attack() {\n    const frame = this.lastFrame || 0,\n          direction = this.getDirection(frame),\n          sprite = this.characterClass+'_attack';\n\n    this.loadTexture(sprite);\n    this.anchor.setTo(0.5, 0.5);\n\n    this.body.width = 64;\n    this.body.height = 64;\n\n    this.game.camera.follow(null);\n\n    this.attacking = true;\n\n    this.animations.play(direction);\n\n    if(this.characterClass === GLOBALS.ARCHER) {\n      setTimeout(() => {\n        this.throwArrow();\n      }, 150);\n    }\n  }\n\n  throwArrow() {\n    let angle,\n        x = this.body.x,\n        y = this.body.y;\n\n    switch(this.lastDirection) {\n      case GLOBALS.DIRECTIONS.UP:\n        angle = 0;\n        y += 14;\n        x += 28;\n        break;\n      case GLOBALS.DIRECTIONS.DOWN:\n        angle = -180;\n        y += 64;\n        x += 38;\n        break;\n      case GLOBALS.DIRECTIONS.LEFT:\n        angle = -90;\n        y += 44;\n        break;\n      case GLOBALS.DIRECTIONS.RIGHT:\n        angle = +90;\n        y += 34;\n        x += 64;\n        break;\n    }\n\n    const arrow = this.game.add.sprite(x, y, 'arrow');\n    arrow.angle = angle;\n\n    this.game.physics.arcade.enable(arrow);\n\n    this.arrows.push({object: arrow, direction: this.lastDirection});\n  }\n\n  getDirection(frame) {\n    switch(frame) {\n      case 0:\n        return GLOBALS.DIRECTIONS.DOWN;\n        break;\n\n      case 3:\n        return GLOBALS.DIRECTIONS.RIGHT;\n        break;\n\n      case 6:\n        return GLOBALS.DIRECTIONS.UP;\n        break;\n\n      case 9:\n        return GLOBALS.DIRECTIONS.LEFT;\n        break;\n    }\n  }\n\n  setupDeadAnimation() {\n    const sprite = this.characterClass+'_dead';\n\n    this.attacking = false;\n    this.receivingAttack = false;\n\n    this.loadTexture(sprite);\n    this.anchor.setTo(0.5, 0.5);\n\n    this.body.width = 64;\n    this.body.height = 64;\n\n    this.animations.play('dead');\n  }\n\n  checkMapBorderProximity() {\n    const characterPosition = { x: this.body.x, y: this.body.y },\n          mapLimits = { x: this.map.width, y: this.map.height };\n\n    if(characterPosition.x >= (mapLimits.x - this.mapBorderThreshold)) {\n      return GLOBALS.DIRECTIONS.LEFT;\n    } else if (characterPosition.x <= this.mapBorderThreshold) {\n      return GLOBALS.DIRECTIONS.RIGHT;\n    } else if (characterPosition.y <= (mapLimits.y - this.mapBorderThreshold)) {\n      return GLOBALS.DIRECTIONS.UP;\n    } else if (characterPosition.y <= this.mapBorderThreshold) {\n      return GLOBALS.DIRECTIONS.DOWN;\n    } else {\n      return false;\n    }\n  }\n\n  randomWalk(speed = 100) {\n    const intervalTime = Math.floor(Math.random() * 200) + 600;\n\n    this.randomWalkInterval = setInterval(() => {\n      const direction = Math.floor(Math.random() * (6 - 1)) + 1;\n      const checkMapBorder = this.checkMapBorderProximity();\n\n      this.randomWalkActive = true;\n\n      if(this.attacking) {\n        return;\n      }\n\n      if(this.playerNear && this.playerDirection) {\n        this.walk(this.playerDirection, speed * 1.5);\n        return;\n      }\n\n      if(checkMapBorder) {\n        this.walk(checkMapBorder, speed);\n        return;\n      }\n\n      if(!this.receivingAttack && this.alive) {\n        switch(direction){\n          case 1:\n            this.walk(GLOBALS.DIRECTIONS.DOWN, speed);\n            break;\n\n          case 2:\n            this.walk(GLOBALS.DIRECTIONS.UP, speed);\n            break;\n\n          case 3:\n            this.walk(GLOBALS.DIRECTIONS.LEFT, speed);\n            break;\n\n          case 4:\n            this.walk(GLOBALS.DIRECTIONS.RIGHT, speed);\n            break;\n\n          case 5:\n            this.walk(GLOBALS.DIRECTIONS.STOP, speed);\n            break;\n        }\n      }\n    }, intervalTime);\n  }\n\n  setupAttackEndCallback() {\n    for (const id in this.animations._anims) {\n      const anim = this.animations._anims[id];\n\n      anim.onComplete.add(() => {\n        if(this.attacking) {\n          this.loadTexture(this.characterClass);\n\n          this.anchor.setTo(0.5, 0.5);\n\n          this.body.width = 32;\n          this.body.height = 32;\n\n          this.game.camera.follow(this);\n\n          this.attacking = false;\n        }\n      }, this);\n    }\n  }\n\n  stepBack(direction) {\n    if(this.type === GLOBALS.PLAYER && this.attacking) {\n      return;\n    }\n\n    const timeoutTime = (this.type === GLOBALS.PLAYER) ? 150 : 200;\n\n    this.body.velocity.x = 0;\n    this.body.velocity.y = 0;\n\n    switch(direction) {\n      case GLOBALS.DIRECTIONS.UP:\n        this.body.velocity.y = -250;\n        break;\n\n      case GLOBALS.DIRECTIONS.DOWN:\n        this.body.velocity.y = 250;\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        this.body.velocity.x = -250;\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        this.body.velocity.x = 250;\n        break;\n    }\n\n    this.animations.stop();\n\n    setTimeout(() => {\n      this.body.velocity.x = 0;\n      this.body.velocity.y = 0;\n    }, timeoutTime);\n  }\n\n  receiveAttack(character) {\n    const frame = character.lastFrame || 0,\n          direction = this.getDirection(frame);\n\n    let damage = 0;\n\n    if(!this.receivingAttack) {\n      this.receivingAttack = true;\n\n      const dexModifier = (character.type === GLOBALS.PLAYER) ? (character.dexterity / 5) : 0;\n      const bonus = Math.floor(Math.random() * (10 - 1)) + 1;\n      const miss = Math.floor(Math.random() * (7 - 1)) + 1 - dexModifier;\n\n      if(character.characterClass === GLOBALS.SWORDSMAN || character.type === GLOBALS.ENEMY) {\n        damage = (character.strength * 2) + bonus;\n      } else if (character.characterClass === GLOBALS.ARCHER) {\n        damage = (character.dexterity * 1.25) + bonus;\n      }\n\n      this.textY = 12;\n\n      if(miss > 4) {\n        if(this.text) {\n          this.text.text = 'miss';\n        } else {\n          this.text = this.game.add.text(0, 0, 'miss', GLOBALS.TEXT_STYLES.DAMAGE);\n          this.text.anchor.set(0.5);\n        }\n\n        if(this.type === GLOBALS.PLAYER) {\n          this.dexterityXP += 0.05;\n\n          if(this.dexterityXP >= 100) {\n            this.dexterity++;\n            this.dexterityXP = 0;\n          }\n        }\n      } else {\n        this.currentHealth = this.currentHealth - damage;\n\n        if(character.characterClass === GLOBALS.ARCHER) {\n          character.dexterityXP += 0.05;\n\n          if(character.dexterityXP >= 100) {\n            character.dexterity++;\n            character.dexterityXP = 0;\n          }\n        } else if (character.characterClass === GLOBALS.ARCHER) {\n          character.strengthXP += 0.05;\n\n          if(character.strengthXP >= 100) {\n            character.strength++;\n            character.strengthXP = 0;\n          }\n        }\n\n        if(this.text) {\n          if(this.currentHealth <= 0) {\n            this.text.text = 'dead!';\n          } else {\n            this.text.text = damage;\n          }\n        } else {\n          this.text = this.game.add.text(0, 0, damage, GLOBALS.TEXT_STYLES.DAMAGE);\n          this.text.anchor.set(0.5);\n        }\n\n        this.checkDeath();\n\n        if(this.alive) {\n          this.stepBack(direction);\n        }\n      }\n\n      if(character.type === GLOBALS.ENEMY) {\n        setTimeout(() => {\n          character.attacking = false;\n        }, 800);\n      }\n\n      setTimeout(() => {\n        this.text.text = '';\n      }, 500);\n\n      setTimeout(() => {\n        this.receivingAttack = false;\n      }, 300);\n    }\n  }\n\n  checkDeath() {\n    if(this.currentHealth <= 0) {\n      this.alive = false;\n\n      if(this.currentHealth < 0) {\n        this.currentHealth = 0;\n      }\n\n      if(this.type === GLOBALS.ENEMY) {\n        clearInterval(this.randomWalkInterval);\n        this.body.velocity.x = 0;\n        this.body.velocity.y = 0;\n        this.body.destroy();\n        this.kill();\n      } else if (this.type === GLOBALS.PLAYER) {\n        this.setupDeadAnimation();\n      }\n    }\n  }\n\n  getOppositeDirectionFrame(frame) {\n    switch(frame) {\n      case 0:\n        return 6;\n        break;\n\n      case 3:\n        return 9;\n        break;\n\n      case 6:\n        return 0;\n        break;\n\n      case 9:\n        return 3;\n        break;\n    }\n  }\n\n  checkProximity(character1, character2, threshold, saveDirection) {\n    const character1X = character1.body.x,\n          character1Y = character1.body.y,\n          character2X = character2.body.x,\n          character2Y = character2.body.y;\n\n    let verticalDirection,\n        verticalDistance,\n        horizontalDirection,\n        horizontalDistance;\n\n    if(((character1X >= (character2X - threshold)) && (character1X <= (character2X + threshold)))\n      && ((character1Y >= (character2Y - threshold)) && (character1Y <= (character2Y + threshold)))) {\n\n      if(saveDirection) {\n        if (character1Y <= (character2Y - threshold) && (character1Y < character2Y)) {\n          verticalDirection = GLOBALS.DIRECTIONS.DOWN;\n          verticalDistance = character2Y - character1Y;\n        } else if (character1Y >= (character2Y - threshold) && (character1Y > character2Y)) {\n          verticalDirection = GLOBALS.DIRECTIONS.UP;\n          verticalDistance = character1Y - character2Y;\n        }\n\n        if((character1X >= (character2X - threshold)) && (character1X < character2X)) {\n          horizontalDirection = GLOBALS.DIRECTIONS.RIGHT;\n          horizontalDistance = character2X - character1X;\n        } else if (character1X <= (character2X + threshold) && (character1X > character2X)) {\n          horizontalDirection = GLOBALS.DIRECTIONS.LEFT;\n          horizontalDistance = character1X - character2X;\n        }\n\n        if(verticalDistance > horizontalDistance) {\n          this.playerDirection = verticalDirection;\n        } else {\n          this.playerDirection = horizontalDirection;\n        }\n      } else {\n        this.playerDirection = null;\n      }\n\n      // console.log(this.playerDirection, horizontalDistance, verticalDistance)\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkPlayerPosition(player) {\n    const attackProximity = 32,\n          playerProximity = (player.characterClass === GLOBALS.ARCHER) ? 260 : 160;\n\n    this.playerNear = this.checkProximity(this, player, playerProximity, this.isHostile);\n\n    const enemyAttackProximity = this.checkProximity(this, player, attackProximity);\n\n    if(enemyAttackProximity) {\n      this.lastFrame = (this.getOppositeDirectionFrame(player.lastFrame));\n      this.frame = this.lastFrame;\n      this.animations.stop();\n\n      if(!this.attacking && player.alive) {\n        this.attacking = true;\n        player.receiveAttack(this);\n      }\n    }\n  }\n\n  saveCharacterStatus(mapName) {\n    const characterId = localStorage.getItem('NWarriorCharID'),\n          url = config.apiURL+'characters/updateCharacter/'+characterId,\n          data = {\n            strength: this.strength,\n            strengthXP: this.strengthXP,\n            constitution: this.constitution,\n            constitutionXP: this.constitutionXP,\n            dexterity: this.dexterity,\n            dexterityXP: this.dexterityXP,\n            intelligence: this.intelligence,\n            intelligenceXP: this.intelligenceXP,\n            charisma: this.charisma,\n            charismaXP: this.charismaXP,\n            health: this.health,\n            currentHealth: this.currentHealth,\n            mana: this.mana,\n            currentMana: this.currentMana,\n            lastPositionX: this.body.x,\n            lastPositionY: this.body.y,\n            lastMap: mapName,\n            firstDialog: this.firstDialog,\n            gameTimeHours: this.gameTimeHours,\n            gameTimeMinutes: this.gameTimeMinutes,\n            token: localStorage.getItem('NWarriorToken')\n          };\n\n    $.ajax({\n\t\t\ttype: \"put\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: (data) => {\n        console.log(\"Character Saved!\")\n      }\n    });\n  }\n\n  updateCharacterStatusFormbox() {\n    const $characterStatusWrapper = $('.character-status__wrapper');\n\n    $characterStatusWrapper.html('');\n\n\t\tUtils.getTemplate('characterStatus', (template) => {\n      template = template.replace('{CharacterClass}', this.characterClass);\n      template = template.replace('{LastSaved}', Utils.formatDate(this.updatedAt));\n      template = template.replace('{Health}', this.health);\n      template = template.replace('{CurrentHealth}', this.currentHealth);\n      template = template.replace('{Mana}', this.mana);\n      template = template.replace('{CurrentMana}', this.currentMana);\n      template = template.replace('{Strength}', this.strength);\n      template = template.replace('{StrengthXP}', this.strengthXP);\n      template = template.replace('{Constitution}', this.constitution);\n      template = template.replace('{ConstitutionXP}', this.constitutionXP);\n      template = template.replace('{Dexterity}', this.dexterity);\n      template = template.replace('{DexterityXP}', this.dexterityXP);\n      template = template.replace('{Intelligence}', this.intelligence);\n      template = template.replace('{IntelligenceXP}', this.intelligenceXP);\n      template = template.replace('{Charisma}', this.charisma);\n      template = template.replace('{CharismaXP}', this.charismaXP);\n      template = template.replace('{ClassImg}', this.classNumber);\n\n      $characterStatusWrapper.append(template);\n\t\t});\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\n\nexport default class Dialog {\n  constructor(data, cb) {\n    this.data = data;\n    this.cb = cb;\n\n    this.$dialogWrapper = $('.dialog__wrapper');\n    this.$dialogText = this.$dialogWrapper.find('.dialog__text');\n\n    this.currentLine = 1;\n    this.numberOfLines = this.data.lines.length;\n\n    this.setup();\n    this.bind();\n  }\n\n  setup() {\n    this.$dialogText.html(this.data.lines[0]);\n    this.$dialogWrapper.removeClass('hide');\n  }\n\n  bind() {\n    this.event = $(document).on('keydown', ev => {\n      const key = ev.keyCode;\n\n      if(key === GLOBALS.KEY_CODES.ENTER) {\n        this.nextLine();\n      }\n\n      if(this.currentLine > this.numberOfLines) {\n        this.event.unbind();\n      }\n    });\n  }\n\n  nextLine() {\n    if(this.currentLine === this.numberOfLines) {\n      this.$dialogWrapper.addClass('hide');\n      this.cb();\n    } else {\n      this.currentLine++;\n      this.$dialogText.html(this.data.lines[this.currentLine - 1]);\n    }\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport config from 'config';\nimport Utils from '../core/Utils';\n\nexport default class Map {\n  constructor(game, options) {\n    this.options = options;\n\n    this.isCity = options.isCity;\n    this.isHouse = options.isHouse;\n\n    this.game = game;\n    this.tilemap = this.game.add.tilemap(this.options.map);\n\n    const gameWidth = this.tilemap.widthInPixels;\n\t  const\tgameHeight = this.tilemap.heightInPixels;\n\n\t  this.game.world.setBounds(0, 0, gameWidth, gameHeight);\n\n    this.tilemap.addTilesetImage('sprites_background_32x32_v3', 'sprites_background_32x32_v3');\n\n    this.groundLayer = this.tilemap.createLayer('Ground');\n    this.groundOverlapLayer = this.tilemap.createLayer('Ground_overlap');\n    this.collideLayer = this.tilemap.createLayer('Collide');\n\n    this.tilemap.currentLayer = 3;\n\n    this.tilemap.setCollisionBetween(1, 10000, true, this.collideLayer);\n  }\n\n  renderLastLayer() {\n    this.passLayer = this.tilemap.createLayer('Pass');\n    this.groundLayer.resizeWorld();\n    this.groundOverlapLayer.resizeWorld();\n    this.collideLayer.resizeWorld();\n    this.passLayer.resizeWorld();\n  }\n\n  addMapTransition(x, y, w, h, callback) {\n    this.tilemap.setTileLocationCallback(x, y, w, h, callback, this, this.groundLayer);\n  }\n}\n",
    "import * as states from '../states';\n\nexport default class StartGame {\n\tconstructor() {\n\t\tconst sizes = { w: 980, h: 470 };\n\n\t\tif(!localStorage.getItem('NWarriorToken')) {\n\t\t\twindow.location.assign('/');\n\t\t}\n\n\t\tthis.game = new Phaser.Game(sizes.w, sizes.h, Phaser.AUTO, 'phaser');\n\n\t\tObject.keys(states).forEach(state => this.game.state.add(state, states[state]));\n\n\t\tthis.game.state.start('Boot');\n\n\t\tthis.uiStyle();\n\t}\n\n\tuiStyle() {\n\t\t$('.ui-style').each(function() {\n\t\t\t$(this).append('<div class=\"ui-style__left-border\"></div><div class=\"ui-style__right-border\"></div><div class=\"ui-style__top-border\"></div><div class=\"ui-style__bottom-border\"></div><div class=\"ui-style__top-left-corner\"></div><div class=\"ui-style__top-right-corner\"></div><div class=\"ui-style__bottom-left-corner\"></div><div class=\"ui-style__bottom-right-corner\"></div>');\n\t\t});\n\t}\n}\n",
    "import Home from 'core/Home';\n\nclass Main {\n\tconstructor() {\n\t\tnew Home();\n\t}\n}\n\n$(document).ready(() => {\n\tnew Main();\n})\n",
    "import GLOBALS from '../core/Globals';\nimport Utils from '../core/Utils';\nimport config from 'config';\n\nexport default class Boot extends Phaser.State {\n\tpreload() {\n    this.setLoader();\n\n    //Player\n\t\tthis.game.load.spritesheet('SwordsMan', 'img/classes/swordman_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('SwordsMan_attack', 'img/classes/swordman_attack.png', 64, 64);\n\t\tthis.game.load.spritesheet('SwordsMan_sleep', 'img/classes/swordman_sleep.png', 64, 64);\n\t\tthis.game.load.spritesheet('SwordsMan_dead', 'img/classes/swordman_dead.png', 64, 64);\n\n\t\tthis.game.load.spritesheet('Archer', 'img/classes/archer_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('Archer_attack', 'img/classes/archer_attack.png', 64, 64);\n\t\tthis.game.load.spritesheet('Archer_sleep', 'img/classes/archer_sleep.png', 64, 64);\n\t\tthis.game.load.spritesheet('Archer_dead', 'img/classes/archer_dead.png', 64, 64);\n\n\t\tthis.game.load.spritesheet('Mage', 'img/classes/mage_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('Mage_sleep', 'img/classes/mage_sleep.png', 64, 64);\n\n\n    //Enemies\n\t\tthis.game.load.spritesheet(GLOBALS.ENEMIES.SLIME, 'img/enemies/slime-2.png', 32, 32);\n\t\tthis.game.load.spritesheet(GLOBALS.ENEMIES.MUSHROOM, 'img/enemies/mushroom-2.png', 32, 32);\n\n\n    //Maps\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_TOP_LEFT, 'tiles/forest_top_left.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_TOP_MIDDLE, 'tiles/forest_top_middle.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_TOP_RIGHT, 'tiles/forest_top_right.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_MIDDLE_LEFT, 'tiles/forest_middle_left.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_MIDDLE_RIGHT, 'tiles/forest_middle_right.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_BOTTOM_LEFT, 'tiles/forest_bottom_left.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_BOTTOM_MIDDLE, 'tiles/forest_bottom_middle.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_BOTTOM_RIGHT, 'tiles/forest_bottom_right.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.USELESS_CITY, 'tiles/useless_city.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.HOUSE_01, 'tiles/house_01.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.image('sprites_background_32x32_v3', 'tiles/sprites_background_32x32_v3.png');\n\n\n    //Objects\n    this.game.load.image('arrow', 'img/classes/arrow.png');\n\n\n    //Audios\n    this.game.load.audio('SadDescent', 'audio/SadDescent.ogg');\n    this.game.load.audio('SadTown', 'audio/SadTown.ogg');\n\t}\n\n\tcreate() {\n    this.getCharacterInfo();\n\t}\n\n\tsetLoader() {\n\t\tthis.loading = this.game.add.text(this.game.world.centerX, this.game.world.centerY, \"Loading...\", GLOBALS.TEXT_STYLES.LOADING);\n\n\t\tthis.loading.anchor.setTo(0.5);\n\t}\n\n  getCharacterInfo() {\n\t\tconst characterId = localStorage.getItem('NWarriorCharID'),\n          url = config.apiURL+'characters/'+characterId,\n          data = {};\n\n\t\tdata.token = localStorage.getItem('NWarriorToken');\n\n\t\t$.ajax({\n\t\t\ttype: \"get\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: (data) => {\n        data.classNumber = data.characterClass;\n      \tdata.characterClass = Utils.formatClass(data.characterClass);\n\n        const map = data.lastMap || 'UselessCity';\n\n        const options = {\n          characterData: data,\n          previousMap: false\n        }\n\n\t\t    this.game.state.start(Utils.humanize(map), true, false, options);\n\t\t\t}\n\t\t});\n\t}\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestBottomLeft extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_BOTTOM_LEFT;\n\n    super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(21, 0, 18, 1, () => {\n      this.changeMap('ForestMiddleLeft', GLOBALS.DIRECTIONS.DOWN);\n    }, this);\n\n    this.map.addMapTransition(39, 4, 1, 35, () => {\n      this.changeMap('ForestBottomMiddle', GLOBALS.DIRECTIONS.LEFT);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestBottomMiddle extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_BOTTOM_MIDDLE;\n\n    return super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(39, 3, 1, 35, () => {\n      this.changeMap('ForestBottomRight', GLOBALS.DIRECTIONS.LEFT);\n    }, this);\n\n    this.map.addMapTransition(0, 3, 1, 35, () => {\n      this.changeMap('ForestBottomLeft', GLOBALS.DIRECTIONS.RIGHT);\n    }, this);\n\n    this.map.addMapTransition(19, 2, 2, 1, () => {\n      this.changeMap('UselessCity', GLOBALS.DIRECTIONS.DOWN);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestBottomRight extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_BOTTOM_RIGHT;\n\n    return super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(1, 0, 38, 1, () => {\n      this.changeMap('ForestMiddleRight', GLOBALS.DIRECTIONS.DOWN);\n    }, this);\n\n    this.map.addMapTransition(0, 4, 1, 35, () => {\n      this.changeMap('ForestBottomMiddle', GLOBALS.DIRECTIONS.RIGHT);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestMiddleLeft extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_MIDDLE_LEFT;\n\n    super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(21, 0, 18, 1, () => {\n      this.changeMap('ForestTopLeft', GLOBALS.DIRECTIONS.DOWN);\n    }, this);\n\n    this.map.addMapTransition(21, 39, 18, 1, () => {\n      this.changeMap('ForestBottomLeft', GLOBALS.DIRECTIONS.UP);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestMiddleRight extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_MIDDLE_RIGHT;\n\n    return super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(1, 0, 38, 1, () => {\n      this.changeMap('ForestTopRight', GLOBALS.DIRECTIONS.DOWN);\n    }, this);\n\n    this.map.addMapTransition(1, 39, 38, 1, () => {\n      this.changeMap('ForestBottomRight', GLOBALS.DIRECTIONS.UP);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestTopLeft extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_TOP_LEFT;\n\n    return super.init(options);\n  }\n\n  create() {\n    super.create();\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(39, 4, 1, 35, () => {\n      this.changeMap('ForestTopMiddle', GLOBALS.DIRECTIONS.LEFT);\n    }, this);\n\n    this.map.addMapTransition(21, 39, 18, 1, () => {\n      this.changeMap('ForestMiddleLeft', GLOBALS.DIRECTIONS.UP);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\nimport Dialog from '../game/Dialog';\n\nexport default class ForestTopMiddle extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_TOP_MIDDLE;\n\n    super.init(options);\n  }\n\n  create() {\n    super.create();\n  }\n\n  getPlayerPosition() {\n    return super.getPlayerPosition();\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(39, 4, 1, 35, () => {\n      this.changeMap('ForestTopRight', GLOBALS.DIRECTIONS.LEFT);\n    }, this);\n\n    this.map.addMapTransition(0, 4, 1, 35, () => {\n      this.changeMap('ForestTopLeft', GLOBALS.DIRECTIONS.RIGHT);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestTopRight extends MapState {\n   init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_TOP_RIGHT;\n\n    return super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(0, 4, 1, 35, () => {\n      this.changeMap('ForestTopMiddle', GLOBALS.DIRECTIONS.RIGHT);\n    }, this);\n\n    this.map.addMapTransition(1, 39, 38, 1, () => {\n      this.changeMap('ForestMiddleRight', GLOBALS.DIRECTIONS.UP);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class House01 extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.HOUSE_01;\n    this.isHouse = true;\n    this.isCity = true;\n\n    super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(4, 7, 1, 1, () => {\n      this.changeMap('UselessCity', GLOBALS.DIRECTIONS.DOWN, 0);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class House02 extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.HOUSE_02;\n    this.isHouse = true;\n    this.isCity = true;\n\n    super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    // this.map.addMapTransition(19, 39, 4, 1, () => {\n    //   this.changeMap('UselessCity', GLOBALS.DIRECTIONS.DOWN, 96);\n    // }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport config from 'config';\nimport Character from '../game/Character';\nimport Map from '../game/Map';\nimport Dialog from '../game/Dialog';\nimport Utils from '../core/Utils';\n\nexport default class MapState extends Phaser.State {\n  init(options) {\n    this.player = null;\n\n    $(window).unbind('keydown');\n\n    if(!this.isCity) {\n      this.enemies = [];\n\n      this.music = this.game.add.audio(GLOBALS.MUSICS.SAD_DESCENT);\n      this.music.loop = true;\n    } else {\n      this.music = this.game.add.audio(GLOBALS.MUSICS.SAD_TOWN);\n      this.music.loop = true;\n    }\n\n    this.options = options;\n\n    this.$overlayDead = $('.game__wrapper__overlay--grey');\n    this.$overlayDead.removeClass('active');\n\n    this.$saveText = $('.game-menu__message');\n\n    this.$saveBtn = $('.game-menu__save-btn');\n    this.$autoSaveCheckbox = $('.game__option--autosave');\n    this.autoSave = (localStorage.getItem('NWarriorAutoSave') === 'true');\n\n    this.musicOn = (localStorage.getItem('NWarriorMusicOn') === 'true');\n    this.$musicCheckbox = $('.game__option--music');\n\n    this.deadDialog = false;\n\n    if(this.autoSave) {\n      this.$autoSaveCheckbox.prop('checked', true);\n    }\n\n    if(this.musicOn) {\n      this.$musicCheckbox.prop('checked', true);\n\n      if(this.music) {\n        this.music.volume = 0.3;\n        this.music.play();\n      }\n    } else {\n      this.$musicCheckbox.prop('checked', false);\n    }\n\n    if(!this.options.previousMap) {\n      this.shouldChangeMap = true;\n    } else {\n      this.shouldChangeMap = false;\n    }\n\n    this.playerPositionThreshold = 32;\n\n    this.$gameTimeHours = $('.game__time-hours');\n    this.$gameTimeMinutes = $('.game__time-minutes');\n    this.$gameTimeType = $('.game__time-type');\n    this.$overlayNight = $('.game__wrapper__overlay--night');\n  }\n\n  create() {\n    this.debug = false;\n\n\t\tthis.game.time.advancedTiming = true;\n\n    this.map = new Map(this.game, {map: this.mapName, isHouse: this.isHouse, isCity: this.isCity});\n\n    this.playerPosition = this.getPlayerPosition();\n    this.playerFirstPosition = this.playerPosition;\n\n    this.player = new Character(this.game, this.options.characterData, GLOBALS.PLAYER, this.playerPosition.x, this.playerPosition.y, this.map);\n\n    this.handleTime();\n\n    if(this.options.previousMap) {\n      this.player.turnSprite(this.playerInitialDirection);\n    }\n\n    if(!this.isCity) {\n      this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.SLIME, isHostile: true, health: 70, currentHealth: 70, strength: 5, dexterity: 5}, GLOBALS.ENEMY, 450, 450, this.map));\n      this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.MUSHROOM, isHostile: true, health: 70, currentHealth: 70, strength: 5, dexterity: 5}, GLOBALS.ENEMY, 150, 150, this.map));\n      this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.SLIME, isHostile: true, health: 70, currentHealth: 70, strength: 5, dexterity: 5}, GLOBALS.ENEMY, 450, 950, this.map));\n      this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.MUSHROOM, isHostile: true, health: 70, currentHealth: 70, strength: 5, dexterity: 5}, GLOBALS.ENEMY, 550, 350, this.map));\n    }\n\n    this.map.renderLastLayer();\n\n    this.addMapTransitions();\n\n    this.bind();\n\n    if(!this.player.firstDialog && !this.welcomeDone) {\n      this.welcome = new Dialog(\n        {\n          lines: [\n            \"Welcome to the ruthless, desolated and cute world of <strong>Nameless Warrior Beta</strong>!\",\n            \"If you have any suggestions or want to report any bug, please send me an email :D (andresan2006@gmail.com)\",\n            \"Go to the <strong>Status</strong> menu to see your character status. Go to <strong>Help</strong> to see the keyboard controls and the description of the status\"\n          ]\n        },\n        () => {\n          this.welcomeDone = true;\n          this.player.firstDialog = true;\n        }\n      );\n    }\n  }\n\n\tupdate() {\n    if(!this.isCity) {\n      if(this.player.characterClass === GLOBALS.ARCHER) {\n        for (let arrow in this.player.arrows) {\n          if(this.player.arrows[arrow] !== null) {\n            this.game.physics.arcade.collide(this.player.arrows[arrow].object, this.enemies, (player, enemy) => {\n              player = (player.key === \"arrow\") ? this.player : player;\n\n              this.player.arrows[arrow].object.destroy();\n              this.player.arrows[arrow].destroyed = true;\n\n              this.collisionHandler(player, enemy);\n            });\n          }\n        }\n      } else {\n        this.game.physics.arcade.collide(this.player, this.enemies, this.collisionHandler);\n      }\n    }\n\n    if(this.options.previousMap) {\n      this.checkShouldChangeMap();\n    }\n\n    if(this.player) {\n      this.game.physics.arcade.collide(this.player, this.map.collideLayer);\n      this.game.physics.arcade.collide(this.player, this.map.groundLayer);\n    }\n\n    if(this.enemies) {\n      for (let key in this.enemies) {\n        if(this.enemies[key].alive) {\n          this.game.physics.arcade.collide(this.enemies[key], this.map.collideLayer);\n\n          this.enemies[key].checkPlayerPosition(this.player);\n        }\n      }\n    }\n\n    if(!this.deadDialog && !this.player.alive) {\n      this.$overlayDead.addClass('active');\n\n      if(this.enemies) {\n        for (let key in this.enemies) {\n          clearInterval(this.enemies[key].randomWalkInterval);\n          this.enemies[key].kill();\n        }\n      }\n\n      this.deadDialog = new Dialog(\n        {\n          lines: [\n            \"You are dead! Like everything else in your life, you have failed!\"\n          ]\n        },\n        () => {\n          this.player.currentHealth = this.player.health;\n          this.player.saveCharacterStatus();\n\n\n          setTimeout(() => {\n            this.changeMap('UselessCity', GLOBALS.DIRECTIONS.DOWN);\n          }, 1000);\n        }\n      );\n    }\n\t}\n\n\trender() {\n    this.game.debug.text('fps: '+this.game.time.fps || '--', 35, 20, \"#fff\");\n\n    if(this.player && this.debug) {\n        this.game.debug.bodyInfo(this.player, 32, 32);\n        this.game.debug.body(this.player);\n    }\n\n    if(this.enemies && this.debug) {\n      for (let key in this.enemies) {\n        const enemy = this.enemies[key];\n\n        this.game.debug.body(enemy);\n      }\n    }\n\t}\n\n  getPlayerPosition() {\n    if(this.options.previousMap) {\n      let initialPosition = 0;\n\n      if(this.options.firstPositionThreshold) {\n        initialPosition += this.options.firstPositionThreshold;\n      }\n\n      switch(this.options.enterPosition) {\n        case GLOBALS.DIRECTIONS.UP:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.UP;\n          return {x: this.options.playerLastPosition.x + 16, y: initialPosition}\n\n          break;\n\n        case GLOBALS.DIRECTIONS.DOWN:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.DOWN;\n          return {x: this.options.playerLastPosition.x + 16, y: this.map.tilemap.heightInPixels - 32 + initialPosition}\n\n          break;\n\n        case GLOBALS.DIRECTIONS.LEFT:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.RIGHT;\n          return {x: initialPosition, y: this.options.playerLastPosition.y + 16}\n\n          break;\n\n        case GLOBALS.DIRECTIONS.RIGHT:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.LEFT;\n          return {x: this.map.tilemap.widthInPixels - 32 + initialPosition, y: this.options.playerLastPosition.y + 16}\n\n          break;\n      }\n    } else {\n      if(this.options.characterData.lastPositionX !== 0) {\n        return {x: this.options.characterData.lastPositionX - 32, y: this.options.characterData.lastPositionY};\n      } else {\n        return {x: 300, y: 300};\n      }\n    }\n  }\n\n  collisionHandler(player, enemy) {\n    if(player.attacking || player.characterClass === GLOBALS.ARCHER) {\n      enemy.receiveAttack(player);\n    }\n  }\n\n  bind() {\n    this.saveLocationInterval = setInterval(() => {\n      if(this.autoSave) {\n        this.player.saveCharacterStatus(this.mapName);\n\n        this.$saveText.removeClass('hide');\n\n        setTimeout(() => {\n          this.$saveText.addClass('hide');\n        }, 3000);\n      }\n    }, 10000);\n\n    this.$saveBtn.click(() => {\n      this.player.saveCharacterStatus(this.mapName);\n\n      this.$saveText.removeClass('hide');\n\n      setTimeout(() => {\n        this.$saveText.addClass('hide');\n      }, 3000);\n    });\n\n    this.$autoSaveCheckbox.change((e) => {\n      if(this.$autoSaveCheckbox.is(':checked')) {\n        this.autoSave = true;\n        localStorage.setItem('NWarriorAutoSave', true);\n      } else {\n        this.autoSave = false;\n        localStorage.setItem('NWarriorAutoSave', false);\n      }\n    });\n\n    this.$musicCheckbox.change((e) => {\n      if(this.$musicCheckbox.is(':checked')) {\n        this.musicOn = true;\n        localStorage.setItem('NWarriorMusicOn', true);\n\n        if(this.music) {\n          this.music.play();\n        }\n      } else {\n        this.musicOn = false\n        localStorage.setItem('NWarriorMusicOn', false);\n\n        if(this.music) {\n          this.music.stop();\n        }\n      }\n    });\n\n    this.timeInverval = setInterval(() => {\n      this.handleTime();\n    }, 5000);\n  }\n\n  checkShouldChangeMap() {\n    const playerCurrentPosition = {\n      x: this.player.body.x,\n      y: this.player.body.y\n    }\n\n    switch(this.options.enterPosition) {\n      case GLOBALS.DIRECTIONS.UP:\n        if((this.playerFirstPosition.y + this.playerPositionThreshold) <= playerCurrentPosition.y) {\n          this.shouldChangeMap = true;\n        }\n\n        break;\n\n      case GLOBALS.DIRECTIONS.DOWN:\n        if((this.playerFirstPosition.y - this.playerPositionThreshold) >= playerCurrentPosition.y) {\n          this.shouldChangeMap = true;\n        }\n\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        if((this.playerFirstPosition.x + this.playerPositionThreshold) <= playerCurrentPosition.x) {\n          this.shouldChangeMap = true;\n        }\n\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        if((this.playerFirstPosition.x - this.playerPositionThreshold) >= playerCurrentPosition.x) {\n          this.shouldChangeMap = true;\n        }\n\n        break;\n    }\n  }\n\n  addMapTransitions() {\n    this.willChangeMap = false;\n  }\n\n  changeMap(state, enterPosition, threshold) {\n    if(!this.shouldChangeMap) {return;}\n\n    this.player.saveCharacterStatus();\n\n    if(this.music) {\n      this.music.stop();\n      this.music = null;\n    }\n\n    clearInterval(this.saveLocationInterval);\n    clearInterval(this.saveStatusInterval);\n    clearInterval(this.timeInverval);\n\n    for (let key in this.enemies) {\n      clearInterval(this.enemies[key].randomWalkInterval);\n    }\n\n    const playerCurrentPosition = {\n      x: this.player.body.x,\n      y: this.player.body.y\n    }\n\n    if(!this.willChangeMap) {\n      this.willChangeMap = true;\n\n      const options = {\n        characterData: this.options.characterData,\n        previousMap: this.mapName,\n        previousMapMusic: this.music,\n        enterPosition: enterPosition,\n        playerLastPosition: playerCurrentPosition,\n        firstPositionThreshold: threshold\n      }\n\n      setTimeout(() => {\n        this.game.state.start(state, true, false, options);\n      }, 100);\n    }\n  }\n\n  handleTime() {\n    const hours = Utils.addZero(this.player.gameTimeHours),\n          minutes = Utils.addZero(this.player.gameTimeMinutes),\n          date = new Date();\n\n    date.setUTCHours(hours);\n    date.setUTCMinutes(minutes);\n\n    date.setUTCMinutes(date.getUTCMinutes() + 5);\n\n    this.player.gameTimeHours = Utils.addZero(date.getUTCHours());\n    this.player.gameTimeMinutes = Utils.addZero(date.getUTCMinutes());\n\n    this.$gameTimeHours.html(this.player.gameTimeHours);\n    this.$gameTimeMinutes.html(this.player.gameTimeMinutes);\n    this.$gameTimeType.html((this.player.gameTimeHours >= 12) ? 'PM' : 'AM');\n\n    this.setNightOverlay(this.player.gameTimeHours);\n  }\n\n  setNightOverlay(hours) {\n    if(hours >= 19 || hours <= 6) {\n      this.$overlayNight.addClass('active');\n\n      let opacity;\n\n      if(hours >= 19 && hours <= 21) {\n        this.$overlayNight.css('opacity', 0.45);\n      } else if ((hours == 22 || hours == 23) || (hours >= 0 && hours <= 4)) {\n        this.$overlayNight.css('opacity', 0.55);\n      } else if (hours == 5 || hours == 6) {\n        this.$overlayNight.css('opacity', 0.35);\n      }\n    } else {\n      this.$overlayNight.removeClass('active');\n    }\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class UselessCity extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.USELESS_CITY;\n    this.isCity = true;\n\n    super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(19, 39, 4, 1, () => {\n      this.changeMap('ForestBottomMiddle', GLOBALS.DIRECTIONS.UP, 96);\n    }, this);\n\n    this.map.addMapTransition(14, 27, 1, 1, () => {\n      this.changeMap('House01', GLOBALS.DIRECTIONS.DOWN, 96);\n    }, this);\n  }\n}\n",
    "export {default as Boot} from './Boot';\nexport {default as ForestTopLeft} from './ForestTopLeft';\nexport {default as ForestTopMiddle} from './ForestTopMiddle';\nexport {default as ForestTopRight} from './ForestTopRight';\nexport {default as ForestMiddleLeft} from './ForestMiddleLeft';\nexport {default as ForestMiddleRight} from './ForestMiddleRight';\nexport {default as ForestBottomLeft} from './ForestBottomLeft';\nexport {default as ForestBottomMiddle} from './ForestBottomMiddle';\nexport {default as ForestBottomRight} from './ForestBottomRight';\nexport {default as UselessCity} from './UselessCity';\nexport {default as House01} from './House01';\nexport {default as House02} from './House02';\n"
  ]
}