{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/js/config.json",
    "src/js/core/Boxes.js",
    "src/js/core/Globals.js",
    "src/js/core/Home.js",
    "src/js/core/Utils.js",
    "src/js/game/Character.js",
    "src/js/game/Dialog.js",
    "src/js/game/Map.js",
    "src/js/game/StartGame.js",
    "src/js/index.js",
    "src/js/states/Boot.js",
    "src/js/states/ForestBottomLeft.js",
    "src/js/states/ForestBottomMiddle.js",
    "src/js/states/ForestBottomRight.js",
    "src/js/states/ForestMiddleLeft.js",
    "src/js/states/ForestMiddleRight.js",
    "src/js/states/ForestTopLeft.js",
    "src/js/states/ForestTopMiddle.js",
    "src/js/states/ForestTopRight.js",
    "src/js/states/House01.js",
    "src/js/states/House02.js",
    "src/js/states/MapState.js",
    "src/js/states/UselessCity.js",
    "src/js/states/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "module.exports={\n\t\"apiURL\": \"https://nameless-warrior-api.herokuapp.com/\"\n}\n",
    "/**\n* FormBoxes handling component\n*\n**/\nexport default class Boxes {\n\tconstructor(trigger, target) {\n\t\tthis.trigger = trigger;\n\t\tthis.target = target;\n\n\t\tthis.bindEvents();\n\t}\n\n\t//binds events to elements according to the selector passed as parameter\n\tbindEvents() {\n\t\tconst _this = this,\n          boxes = $(this.trigger),\n\t\t\t\t  overlay = $('.overlay');\n\n\t\tboxes.each(function() {\n\t\t\tlet href = $(this).data(\"target\"),\n\t\t\t\t\tactualSection = $(href),\n\t\t\t\t\tclose = actualSection.find('.formbox__close');\n\n\t\t\tclose.click((e) => {\n\t\t\t\te.preventDefault();\n\n\t\t\t\toverlay.addClass('hide');\n\t\t\t\tactualSection.removeClass('active');\n\t\t\t});\n\n\t\t\toverlay.click(() => {\n\t\t\t\toverlay.addClass('hide');\n\t\t\t\tactualSection.removeClass('active');\n\t\t\t});\n\n\t\t\t$(this).click((e) => {\n\t\t\t\te.preventDefault();\n\n        if(actualSection.is('.active')) {\n\t\t\t\t  _this.closeAll();\n        } else {\n\t\t\t\t  _this.closeAll();\n          overlay.removeClass('hide');\n          actualSection.addClass('active');\n        }\n\t\t\t});\n\t\t});\n\t}\n\n\tcloseAll() {\n\t\tlet boxes = $('.formbox');\n\n\t\tboxes.each(function() {\n\t\t\t$(this).removeClass('active');\n\t\t});\n\n\t\t$('.overlay').addClass('hide');\n\t}\n}\n",
    "const GLOBALS = {\n  PLAYER: 'player',\n  NPC: 'NPC',\n  ENEMY: 'enemy',\n\n  SWORDSMAN: 'SwordsMan',\n  MAGE: 'Mage',\n  ARCHER: 'Archer',\n\n  ENEMIES: {\n    SLIME: 'Slime',\n    MUSHROOM: 'Mushroom'\n  },\n\n  MAPS: {\n    FOREST_TOP_LEFT: 'forest_top_left',\n    FOREST_TOP_MIDDLE: 'forest_top_middle',\n    FOREST_TOP_RIGHT: 'forest_top_right',\n    FOREST_MIDDLE_LEFT: 'forest_middle_left',\n    FOREST_MIDDLE_RIGHT: 'forest_middle_right',\n    FOREST_BOTTOM_LEFT: 'forest_bottom_left',\n    FOREST_BOTTOM_MIDDLE: 'forest_bottom_middle',\n    FOREST_BOTTOM_RIGHT: 'forest_bottom_right',\n    USELESS_CITY: 'useless_city',\n    HOUSE_01: 'house_01',\n    HOUSE_02: 'house_02'\n  },\n\n  MUSICS: {\n    SAD_TOWN: 'SadTown',\n    SAD_DESCENT: 'SadDescent'\n  },\n\n  DIRECTIONS: {\n    UP: 'top',\n    DOWN: 'down',\n    LEFT: 'left',\n    RIGHT: 'right',\n    STOP: 'stop'\n  },\n\n  TEXT_STYLES: {\n    DAMAGE: { font: \"14px FreePixel\", fontWeight: 'Bold', fill: \"#000\", wordWrap: true, wordWrapWidth: 32, align: \"center\" },\n    NPC_TEXT: { font: \"14px FreePixel\", fontWeight: 'Bold', fill: \"#fff\", wordWrap: false, align: \"center\" },\n    DEAD: { font: \"20px FreePixel\", fontWeight: 'Bold', fill: \"#fff\", align: \"center\" },\n    LOADING: { font: \"18px FreePixel\", fill: \"#fff\"}\n  },\n\n  KEY_CODES: {\n    ENTER: 13,\n    A: 65,\n    L: 76,\n    ONE: 49,\n    TWO: 50\n  }\n}\n\nexport default GLOBALS;\n",
    "/**\n* Homepage handling component\n*\n**/\nimport config from 'config';\nimport Utils from './Utils';\nimport Boxes from './Boxes';\nimport StartGame from '../game/StartGame';\n\nexport default class Home {\n\tconstructor() {\n\t\tthis.boxes = new Boxes('.open-formbox', '.formbox');\n\n\t\tthis.formsSelector = \".form\";\n\n    this.isChrome = Utils.isChrome();\n\n\t\tthis.menuNotLogged = $('.menu--not-logged');\n\t\tthis.loggedMenu = $('.menu--logged');\n\n\t\tthis.notLoggedText = $('.not-logged--text');\n\t\tthis.loggedText = $('.logged--text');\n\n\t\tthis.loggedInfo = $('.logged--info');\n\n    $('.tooltip').tooltipster({\n      contentAsHTML: true\n    });\n\n\t\tthis.bindEvents();\n\t\tthis.checkLogin();\n\n    if(!this.isChrome) {\n      $('.footer').removeClass('hide');\n    }\n\t}\n\n\tbindEvents() {\n\t\tconst _this = this,\n\t\t\t\t  forms = $(this.formsSelector);\n\n\t\tforms.each((_, currentForm) => {\n\t\t\tconst form = $(currentForm),\n            formTarget = form.data(\"target\"),\n            result = form.find('.formbox__result');\n\n\t\t\tform.submit((e) => {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tlet data = Utils.serializeObject($(e.currentTarget));\n\n        if(formTarget === 'characters') {\n          data = this.handleCharacterData(data);\n        }\n\n\t\t\t\tif(!_this.validation(formTarget, form, result)) {\n\t\t\t\t\t_this.ajaxPOST(formTarget, result, data);\n\t\t\t\t\t_this.cleanForms(form, formTarget, result);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$('.logout').click(function() {\n\t\t\t_this.logout();\n\t\t});\n\n\t\t$('.character__wrapper').on('click', '.character', function(e) {\n\t\t\tconst characterId = $(this).data('character-id');\n\n\t\t  localStorage.setItem('NWarriorCharID', characterId);\n\n\t\t\t_this.boxes.closeAll();\n\n\t\t\t$('.content').addClass('hide');\n\t\t\t$('.game__wrapper').removeClass('hide');\n\n\t\t\tnew StartGame();\n\t\t});\n\t}\n\n  handleCharacterData(data) {\n    const health = 100 + (data.constitution) * 2;\n\n    data.health = health;\n    data.currentHealth = health;\n\n    return data;\n  }\n\n\tvalidation(target, form, result) {\n\t\tlet invalid = false;\n\n\t\tswitch(target) {\n\t\t\tcase 'users' :\n\t\t\t\tconst password = form.find('[name=signupPassword]').val(),\n\t\t\t\t\t\t  repeatPassword = form.find('[name=signupRepeatPassword]').val();\n\n\t\t\t  if (password != repeatPassword) {\n          result.html('The passwords must be equal!');\n          invalid = true;\n        }\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'characters':\n\t\t\t\tconst remainingStats = form.find('.remaining-stats').html(),\n              selectedClass = form.find('[name=\"characterClass\"]').val();\n\n\t\t\t\tif(selectedClass === \"\") {\n          result.html('You must select a character class!');\n\t\t\t\t\tinvalid = true;\n        } else if(remainingStats != 0) {\n\t\t\t\t\tresult.html('You must distribute all attributes!');\n\t\t\t\t\tinvalid = true;\n\t\t    }\n\n\t\t\t\tbreak;\n    }\n\n\t\treturn invalid;\n\t}\n\n\tcleanForms(form, target) {\n\t\tform.find('input[type=text]:not([readonly])').val('');\n\n\t\tswitch(target) {\n\t\t\tcase 'characters':\n\t\t\t\tform.find('.stats__input').val(5);\n\t\t\t\tform.find('.stats__counter').val(10);\n        form.find('.formbox__group__character').addClass('active');\n        form.find('[name=characterClass]').val('');\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tajaxPOST(target, result, data) {\n\t\tconst _this = this,\n          loader = $('.loader'),\n          url = config.apiURL+target;\n\n\t\tloader.addClass('active');\n\n\t\tdata.token = localStorage.getItem('NWarriorToken');\n\n\t\t$.ajax({\n\t\t\ttype: \"POST\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: function(data) {\n\t\t    loader.removeClass('active');\n\n\t\t  \tif(data.failedAuth) {\n\t\t    \treturn _this.logout();\n\t\t    }\n\n\t\t    switch(target) {\n\t\t    \tcase 'users':\n\t\t    \t\t_this.handleSignUp(data, result);\n\t\t    \t\tbreak;\n\n\t\t    \tcase 'users/login':\n\t\t    \t\t_this.handleLogin(data, result);\n\t\t    \t\tbreak;\n\n\t\t    \tcase 'characters':\n\t\t    \t\t_this.handleCharacterCreation(data, result);\n\t\t    \t\tbreak;\n\t\t    }\n\t\t\t},\n\t\t\terror: function(xhr, errorType, error) {\n\t\t\t\tif(errorType == 403)\n\t\t\t\t\t_this.logout();\n\t\t\t}\n\t\t});\n\t}\n\n\thandleSignUp(data, result) {\n\t\tresult.html(data.message);\n\n\t\tif(data.created) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.boxes.closeAll();\n\t\t\t\t$('[data-target=\"#formbox-login\"]').click();\n\t\t\t}, 500);\n\t\t}\n\t}\n\n\thandleLogin(data, result) {\n\t\tresult.html(data.message);\n\n\t\tif(data.logged) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.boxes.closeAll();\n\t\t\t}, 500);\n\n\t\t\tthis.saveSession(data);\n\t\t\tthis.checkLogin();\n\t\t}\n\t}\n\n\tsaveSession(data) {\n\t\tlocalStorage.setItem('NWarriorUserID', data.userId);\n\t\tlocalStorage.setItem('NWarriorEmail', data.email);\n    localStorage.setItem('NWarriorToken', data.token);\n\t}\n\n\tcheckLogin() {\n\t\tif(localStorage.getItem('NWarriorToken')) {\n\t\t\tthis.loggedInfo.find('span').html(localStorage.getItem('NWarriorEmail'));\n\n\t\t\tthis.loggedMenu.removeClass('hide');\n\t\t\tthis.loggedText.removeClass('hide');\n\t\t\tthis.loggedInfo.removeClass('hide');\n\t\t\tthis.menuNotLogged.addClass('hide');\n\t\t\tthis.notLoggedText.addClass('hide');\n\n\t\t\tthis.setupCharacterCreation();\n\t\t\tthis.updateCharacterList();\n\t\t} else {\n\t\t\tthis.loggedMenu.addClass('hide');\n\t\t\tthis.loggedText.addClass('hide');\n\t\t\tthis.loggedInfo.addClass('hide');\n\t\t\tthis.menuNotLogged.removeClass('hide');\n\t\t\tthis.notLoggedText.removeClass('hide');\n\t\t}\n\t}\n\n\tsetupCharacterCreation() {\n\t\tconst form = $('[name=\"form_create\"]'),\n          selectedClass = form.find('[name=\"characterClass\"]'),\n          stats = form.find('.stats__group'),\n          remainingStats = form.find('.remaining-stats');\n\n\t\t$('.formbox__group__character').on('click', (e) => {\n      const currentClass = $(e.currentTarget),\n            classNumber = currentClass.data('characterClass');\n\n      $('.formbox__group__character').removeClass('active');\n      currentClass.addClass('active');\n      selectedClass.val(classNumber);\n    });\n\n\t\tstats.each(function() {\n\t\t\tconst\tstatsGroup = $(this),\n            plusButton = statsGroup.find('.stats__btn--plus'),\n            minusButton = statsGroup.find('.stats__btn--minus'),\n            statsInput = statsGroup.find('.stats__input');\n\n\t\t\tplusButton.click(function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tlet remainingStatsVal = remainingStats.html(),\n\t\t\t\t\t\tstatsVal = statsInput.val();\n\n\t\t\t\tif(remainingStatsVal > 0) {\n\t\t\t\t\tstatsVal++;\n\n\t\t\t\t\tstatsInput.val(statsVal);\n\n\t\t\t\t\tremainingStatsVal--;\n\n\t\t\t\t\tremainingStats.html(remainingStatsVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tminusButton.click(function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tlet remainingStatsVal = remainingStats.html(),\n\t\t\t\t\t\tstatsVal = statsInput.val();\n\n\t\t\t\tif(remainingStatsVal < 10 && statsVal > 5) {\n\t\t\t\t\tstatsVal--;\n\n\t\t\t\t\tstatsInput.val(statsVal);\n\t\t\t\t\tremainingStatsVal++;\n\n\t\t\t\t\tremainingStats.html(remainingStatsVal);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$('[name=userId]').val(localStorage.getItem('NWarriorUserID'));\n\t}\n\n\thandleCharacterCreation(data, result) {\n\t\tresult.html(data.message);\n\n\t\tsetTimeout(() => {\n\t\t\tthis.boxes.closeAll();\n\t\t\t$('[data-target=\"#formbox-select\"]').click();\n\t\t\tresult.html('');\n      $('.remaining-stats').html(10);\n\t\t}, 500);\n\n\t\tthis.updateCharacterList();\n\t}\n\n\tupdateCharacterList() {\n\t\tconst _this = this,\n          loader = $('.loader'),\n          userId = localStorage.getItem('NWarriorUserID'),\n          url = config.apiURL+'characters/byUser/'+userId,\n          characterList = $('.character__wrapper');\n\n\t\tloader.addClass('active');\n\n\t\t$('.character__wrapper > *').remove();\n\n\t\tUtils.getTemplate('characterSelection', function(template) {\n\t\t\tconst characterTemplate = template;\n\n\t\t  let\tdata = {};\n\n\t\t\tdata.token = localStorage.getItem('NWarriorToken');\n\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\ttype: \"get\",\n\t\t\t\tdata: data,\n\t\t\t\tsuccess: (data) => {\n\t\t\t    loader.removeClass('active');\n\n\t\t\t    if(data.length) {\n\t\t\t\t    for (let i in data) {\n\t\t\t\t    \tlet character = data[i],\n\t\t\t\t\t\t\t\t\ttemplate = characterTemplate;\n\n\t\t\t\t\t\t\ttemplate = template.replace('{LastSaved}', Utils.formatDate(character.updatedAt));\n\t\t\t\t\t\t\ttemplate = template.replace('{CharacterClass}', Utils.formatClass(character.characterClass));\n\t\t\t\t\t\t\ttemplate = template.replace('{Strength}', character.strength);\n\t\t\t\t\t\t\ttemplate = template.replace('{Constitution}', character.constitution);\n\t\t\t\t\t\t\ttemplate = template.replace('{Dexterity}', character.dexterity);\n\t\t\t\t\t\t\ttemplate = template.replace('{Intelligence}', character.intelligence);\n\t\t\t\t\t\t\ttemplate = template.replace('{Charisma}', character.charisma);\n\t\t\t\t\t\t\ttemplate = template.replace('{ClassImg}', character.characterClass);\n\n\t\t\t\t\t\t\tcharacterList.append('<div class=\"character\" data-character-id=\"'+character._id+'\">'+template+'</div>');\n\t\t\t\t    }\n\t\t\t    } else {\n\t\t\t    \tcharacterList.append('<p>No characters found! Press \"New Character\" to create your first!</p>')\n\t\t\t    }\n\t\t\t  },\n\t\t\t\terror: function(xhr, errorType, error) {\n\t\t\t\t\t_this.logout();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tlogout() {\n\t\tlocalStorage.clear();\n\t\tlocation.reload();\n\t}\n}\n",
    "import GLOBALS from '../core/Globals';\n\nexport default class Utils {\n  static formatClass(characterClass) {\n    let classString;\n\n    switch(characterClass) {\n      case 1:\n        classString = GLOBALS.SWORDSMAN;\n        break;\n\n      case 2:\n        classString = GLOBALS.MAGE;\n        break;\n\n      case 3:\n        classString = GLOBALS.ARCHER;\n        break;\n    }\n\n    return classString;\n  }\n\n  static getTemplate(template, cb) {\n    $.get('templates/'+template+'.html', (response) => {\n      cb(response);\n    });\n  }\n\n  static serializeObject(obj) {\n    let o = {},\n        a = obj.serializeArray();\n\n    $.each(a, function() {\n      if (o[this.name]) {\n        if (!o[this.name].push) {\n            o[this.name] = [o[this.name]];\n        }\n        o[this.name].push(this.value || '');\n      } else {\n        o[this.name] = this.value || '';\n      }\n    });\n\n    return o;\n  };\n\n  static humanize(str) {\n    let frags = str.split('_');\n    for (let i = 0; i < frags.length; i++) {\n      frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n    }\n    return frags.join('');\n  }\n\n  static formatDate(timestamp) {\n    const date = new Date(timestamp),\n          day = date.getDate(),\n          month = date.getMonth() + 1,\n          year = date.getFullYear(),\n          hours = date.getHours(),\n          minutes = date.getMinutes();\n\n    return month+'-'+day+'-'+year+' '+hours+':'+minutes;\n  }\n\n  static addZero(number) {\n    return ('0' + Number(number).toFixed(0)).slice(-2);\n  }\n\n  static isChrome() {\n    return /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport config from 'config';\nimport Utils from '../core/Utils';\nimport Dialog from '../game/Dialog';\n\nexport default class Character extends Phaser.Sprite {\n\tconstructor(game, data, type = GLOBALS.PLAYER, x, y, map) {\n\t\tsuper(game, x, y, data.characterClass);\n\n    this.anchor.setTo(0.5, 0.5);\n\n    this.map = map;\n    this.mapBorderThreshold = 100;\n\n    this.lastDirection = GLOBALS.DIRECTIONS.DOWN;\n\n    this.textY = 12;\n\n    this.type = type;\n    this.frame = 0;\n    this.alive = true;\n    this.playerNear = false;\n\n    this.speech = data.speech;\n    this.completedQuestSpeech = data.completedQuest;\n    this.name = data.name;\n    this.quest = data.quest;\n\n\t\tthis.setCharacterInfo(data);\n\n    if(this.characterClass === GLOBALS.ARCHER) {\n      this.arrows = [];\n    }\n\t}\n\n\tsetCharacterInfo(data, update = false) {\n    data = data || this;\n\n    this.classNumber = data.classNumber;\n\t\tthis.characterClass = data.characterClass;\n\n\t\tthis.strength = data.strength;\n\t\tthis.strengthXP = data.strengthXP;\n\t\tthis.constitution = data.constitution;\n\t\tthis.constitutionXP = data.constitutionXP;\n\t\tthis.dexterity = data.dexterity;\n\t\tthis.dexterityXP = data.dexterityXP;\n\t\tthis.intelligence = data.intelligence;\n\t\tthis.intelligenceXP = data.intelligenceXP;\n\t\tthis.charisma = data.charisma;\n\t\tthis.charismaXP = data.charismaXP;\n\n    this.quests = data.quests;\n\n    this.firstDialog = data.firstDialog;\n\n    this.gameTimeHours = data.gameTimeHours;\n    this.gameTimeMinutes = data.gameTimeMinutes;\n\n\t\tthis.health = data.health;\n\t\tthis.currentHealth = data.currentHealth;\n\t\tthis.mana = data.mana;\n\t\tthis.currentMana = data.currentMana;\n\n    this.isHostile = data.isHostile;\n\n    this.updatedAt = data.updatedAt;\n\n\t  this.speed = 220 + (this.dexterity * 2);\n\n    if(!update) {\n\t\t  this.create();\n    }\n\n    if(this.type === GLOBALS.PLAYER) {\n      this.updateCharacterStatusFormbox();\n    }\n\t}\n\n\tcreate() {\n\t\tthis.game.add.existing(this);\n\t  this.game.physics.arcade.enable(this);\n\t  this.body.collideWorldBounds = true;\n\n    if(this.type === GLOBALS.PLAYER) {\n\t    this.game.camera.follow(this);\n    }\n\n\t  this.setupAnimations();\n\n    if(this.type === GLOBALS.NPC || this.type === GLOBALS.ENEMY) {\n      this.body.immovable = true;\n    }\n\n    if(this.type === GLOBALS.ENEMY) {\n      this.randomWalk();\n    }\n\n    if(this.type === GLOBALS.PLAYER && !this.map.isCity) {\n      this.setupAttackEndCallback();\n    }\n\t}\n\n  talk(player) {\n    const quest = (this.quest) ? player.quests[this.quest] : '';\n\n    if(quest) {\n      quest.started = true;\n\n      if(quest.counter === 10 && !quest.done) {\n        quest.done = true;\n        player.strength += 1;\n        player.constitution += 1;\n        player.dexterity += 1;\n      }\n    }\n\n    player.updateCharacterStatusFormbox();\n\n    this.talking = new Dialog(\n      {\n        lines: (quest.done) ? this.completedQuestSpeech : this.speech,\n        name: this.name\n      },\n      () => {\n        this.talking = null;\n      }\n    );\n  }\n\n\tupdate() {\n    if(this.type === GLOBALS.PLAYER) {\n      if(!this.healing && this.currentHealth !== this.health && this.alive && !this.inCombat) {\n        this.currentHealth++;\n        this.healing = true;\n\n        setTimeout(() => {\n          this.healing = false;\n        }, 1000);\n      }\n\n      if(!this.alive) {\n        this.animations.play('dead');\n        this.body.velocity.x = 0;\n        this.body.velocity.y = 0;\n      } else {\n        this.handleWalking();\n\n        if(this.arrows) {\n          this.handleArrows();\n        }\n      }\n\n      this.updateBars();\n    }\n\n    if(this.type === GLOBALS.NPC) {\n      if(this.playerAside && !this.talking) {\n        const instruction = (localStorage.getItem('NWarriorControls') === 'true') ? \"Press L to talk\" : \"Press A to talk\";\n\n        if(!this.text || this.text.text == '') {\n          this.text = this.game.add.text(0, 0, instruction, GLOBALS.TEXT_STYLES.NPC_TEXT);\n        }\n      } else if(this.text) {\n        this.text.text = '';\n      }\n    }\n\n    if(this.text && this.body && this.alive) {\n      if(this.type === GLOBALS.NPC) {\n        this.text.x = Math.floor(this.body.x - 36);\n        this.text.y = Math.floor(this.body.y + this.body.height / 2 - 36);\n      } else {\n        this.textY -= 1;\n\n        this.text.x = Math.floor(this.body.x + this.body.width / 2);\n        this.text.y = Math.floor(this.body.y + this.body.height / 2 + this.textY);\n      }\n    }\n\t}\n\n\tupdateBars() {\n\t\tconst hpVal = $('.bar--health .bar__value'),\n          hpTxt = $('.bar--health .bar__text span'),\n          mpVal = $('.bar--mana .bar__value'),\n          mpTxt = $('.bar--mana .bar__text span');\n\n    let hpPercentage = (this.currentHealth / (this.health * 100)) * 10000;\n\n    hpPercentage = hpPercentage.toFixed(0)+\"%\";\n    hpVal.css('width', hpPercentage);\n\n\t\thpTxt.html(this.currentHealth+'/'+this.health);\n\t\tmpTxt.html(this.currentMana+'/'+this.mana);\n\t}\n\n\thandleWalking() {\n\t  const speed = this.speed,\n          alternativeControls = (localStorage.getItem('NWarriorControls') === 'true');\n\n\t  let direction;\n\n    if(this.attacking) {\n      this.body.velocity.x = 0;\n      this.body.velocity.y = 0;\n      return;\n    }\n\n    const left = (alternativeControls) ? this.game.input.keyboard.isDown(Phaser.Keyboard.A) : this.game.input.keyboard.isDown(Phaser.Keyboard.LEFT);\n    const right = (alternativeControls) ? this.game.input.keyboard.isDown(Phaser.Keyboard.D) : this.game.input.keyboard.isDown(Phaser.Keyboard.RIGHT);\n    const up = (alternativeControls) ? this.game.input.keyboard.isDown(Phaser.Keyboard.W) : this.game.input.keyboard.isDown(Phaser.Keyboard.UP);\n    const down = (alternativeControls) ? this.game.input.keyboard.isDown(Phaser.Keyboard.S) : this.game.input.keyboard.isDown(Phaser.Keyboard.DOWN);\n\n\t\tif (left) {\n\t    direction = GLOBALS.DIRECTIONS.LEFT;\n\t  } else if (right) {\n\t    direction = GLOBALS.DIRECTIONS.RIGHT;\n\t  } else if (up) {\n\t    direction = GLOBALS.DIRECTIONS.UP;\n\t  } else if (down) {\n\t    direction = GLOBALS.DIRECTIONS.DOWN;\n\t  } else {\n\t    direction = GLOBALS.DIRECTIONS.STOP;\n\t  }\n\n    if(!this.receivingAttack) {\n\t\t  this.walk(direction, speed);\n    }\n\t}\n\n  handleArrows() {\n    const speed = this.dexterity * 1.25;\n\n    this.arrows.forEach((arrow) => {\n      if(!arrow.destroyed) {\n        switch(arrow.direction) {\n          case GLOBALS.DIRECTIONS.UP:\n            arrow.object.y -= speed;\n            break;\n          case GLOBALS.DIRECTIONS.DOWN:\n            arrow.object.y += speed;\n            break;\n          case GLOBALS.DIRECTIONS.LEFT:\n            arrow.object.x -= speed;\n            break;\n          case GLOBALS.DIRECTIONS.RIGHT:\n            arrow.object.x += speed;\n            break;\n        }\n\n        if((arrow.object.y <= 0) || (arrow.object.y >= this.map.width) || (arrow.object.x <= 0) || (arrow.object.x >= this.map.height)) {\n          arrow.object.destroy();\n          arrow.destroyed = true;\n          arrow = null;\n        }\n      }\n    });\n  }\n\n\tsetupAnimations() {\n    if(this.type === GLOBALS.PLAYER) {\n      this.animations.add('dead', [0, 1, 2], 3, true);\n      this.animations.add(GLOBALS.DIRECTIONS.DOWN, [0, 1, 2], 10, false);\n      this.animations.add(GLOBALS.DIRECTIONS.RIGHT, [3, 4, 5], 10, false);\n      this.animations.add(GLOBALS.DIRECTIONS.UP, [6, 7, 8], 10, false);\n      this.animations.add(GLOBALS.DIRECTIONS.LEFT, [9, 10, 11], 10, false);\n    } else if (this.type === GLOBALS.ENEMY) {\n      this.animations.add(GLOBALS.DIRECTIONS.DOWN, [0, 1, 2], 10, true);\n      this.animations.add(GLOBALS.DIRECTIONS.RIGHT, [3, 4, 5], 10, true);\n      this.animations.add(GLOBALS.DIRECTIONS.UP, [6, 7, 8], 10, true);\n      this.animations.add(GLOBALS.DIRECTIONS.LEFT, [9, 10, 11], 10, true);\n    }\n  }\n\n  turnSprite(direction) {\n    let frame;\n\n    switch(direction) {\n      case GLOBALS.DIRECTIONS.UP:\n        frame = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        frame = 3;\n        break;\n\n      case GLOBALS.DIRECTIONS.DOWN:\n        frame = 6;\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        frame = 9;\n        break;\n    }\n\n    this.frame = frame;\n  }\n\n  walk(direction, speed = 50) {\n    switch(direction){\n      case GLOBALS.DIRECTIONS.DOWN:\n        this.lastFrame = 0;\n        this.lastDirection = GLOBALS.DIRECTIONS.DOWN;\n        this.body.velocity.y = speed;\n        this.body.velocity.x = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        this.lastFrame = 3;\n        this.lastDirection = GLOBALS.DIRECTIONS.RIGHT;\n        this.body.velocity.y = 0;\n        this.body.velocity.x = speed;\n        break;\n\n      case GLOBALS.DIRECTIONS.UP:\n        this.lastFrame = 6;\n        this.lastDirection = GLOBALS.DIRECTIONS.UP;\n        this.body.velocity.y = -speed;\n        this.body.velocity.x = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        this.lastFrame = 9;\n        this.lastDirection = GLOBALS.DIRECTIONS.LEFT;\n        this.body.velocity.x = -speed;\n        this.body.velocity.y = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.STOP:\n        if(!this.attacking) {\n          this.body.velocity.x = 0;\n          this.body.velocity.y = 0;\n          this.frame = this.lastFrame;\n          this.animations.stop();\n        }\n\n        break;\n    }\n\n    this.animations.play(direction);\n  }\n\n  attack() {\n    const frame = this.lastFrame || 0,\n          direction = this.getDirection(frame),\n          sprite = this.characterClass+'_attack';\n\n    this.loadTexture(sprite);\n    this.anchor.setTo(0.5, 0.5);\n\n    this.body.width = 64;\n    this.body.height = 64;\n\n    this.game.camera.follow(null);\n\n    this.attacking = true;\n\n    this.animations.play(direction);\n\n    if(this.characterClass === GLOBALS.ARCHER) {\n      setTimeout(() => {\n        this.throwArrow();\n      }, 150);\n    }\n  }\n\n  throwArrow() {\n    let angle,\n        x = this.body.x,\n        y = this.body.y;\n\n    switch(this.lastDirection) {\n      case GLOBALS.DIRECTIONS.UP:\n        angle = 0;\n        y += 14;\n        x += 28;\n        break;\n      case GLOBALS.DIRECTIONS.DOWN:\n        angle = -180;\n        y += 64;\n        x += 38;\n        break;\n      case GLOBALS.DIRECTIONS.LEFT:\n        angle = -90;\n        y += 44;\n        break;\n      case GLOBALS.DIRECTIONS.RIGHT:\n        angle = +90;\n        y += 34;\n        x += 64;\n        break;\n    }\n\n    const arrow = this.game.add.sprite(x, y, 'arrow');\n    arrow.angle = angle;\n\n    this.game.physics.arcade.enable(arrow);\n\n    this.arrows.push({object: arrow, direction: this.lastDirection});\n  }\n\n  getDirection(frame) {\n    switch(frame) {\n      case 0:\n        return GLOBALS.DIRECTIONS.DOWN;\n        break;\n\n      case 3:\n        return GLOBALS.DIRECTIONS.RIGHT;\n        break;\n\n      case 6:\n        return GLOBALS.DIRECTIONS.UP;\n        break;\n\n      case 9:\n        return GLOBALS.DIRECTIONS.LEFT;\n        break;\n    }\n  }\n\n  setupDeadAnimation() {\n    const sprite = this.characterClass+'_dead';\n\n    this.attacking = false;\n    this.receivingAttack = false;\n\n    this.loadTexture(sprite);\n    this.anchor.setTo(0.5, 0.5);\n\n    this.body.width = 64;\n    this.body.height = 64;\n\n    this.animations.play('dead');\n  }\n\n  checkMapBorderProximity() {\n    const characterPosition = { x: this.body.x, y: this.body.y },\n          mapLimits = { x: this.map.width, y: this.map.height };\n\n    if(characterPosition.x >= (mapLimits.x - this.mapBorderThreshold)) {\n      return GLOBALS.DIRECTIONS.LEFT;\n    } else if (characterPosition.x <= this.mapBorderThreshold) {\n      return GLOBALS.DIRECTIONS.RIGHT;\n    } else if (characterPosition.y <= (mapLimits.y - this.mapBorderThreshold)) {\n      return GLOBALS.DIRECTIONS.UP;\n    } else if (characterPosition.y <= this.mapBorderThreshold) {\n      return GLOBALS.DIRECTIONS.DOWN;\n    } else {\n      return false;\n    }\n  }\n\n  randomWalk(speed = 100) {\n    const intervalTime = Math.floor(Math.random() * 200) + 600;\n\n    this.randomWalkInterval = setInterval(() => {\n      const direction = Math.floor(Math.random() * (6 - 1)) + 1;\n      const checkMapBorder = this.checkMapBorderProximity();\n\n      this.randomWalkActive = true;\n\n      if(this.attacking) {\n        this.body.velocity.x = 0;\n        this.body.velocity.y = 0;\n        return;\n      }\n\n      if(this.playerNear && this.playerDirection) {\n        this.walk(this.playerDirection, speed * 1.5);\n        return;\n      }\n\n      if(checkMapBorder) {\n        this.walk(checkMapBorder, speed);\n        return;\n      }\n\n      if(!this.receivingAttack && this.alive) {\n        switch(direction){\n          case 1:\n            this.walk(GLOBALS.DIRECTIONS.DOWN, speed);\n            break;\n\n          case 2:\n            this.walk(GLOBALS.DIRECTIONS.UP, speed);\n            break;\n\n          case 3:\n            this.walk(GLOBALS.DIRECTIONS.LEFT, speed);\n            break;\n\n          case 4:\n            this.walk(GLOBALS.DIRECTIONS.RIGHT, speed);\n            break;\n\n          case 5:\n            this.walk(GLOBALS.DIRECTIONS.STOP, speed);\n            break;\n        }\n      }\n    }, intervalTime);\n  }\n\n  setupAttackEndCallback() {\n    for (const id in this.animations._anims) {\n      const anim = this.animations._anims[id];\n\n      anim.onComplete.add(() => {\n        if(this.attacking) {\n          this.loadTexture(this.characterClass);\n\n          this.anchor.setTo(0.5, 0.5);\n\n          this.body.width = 32;\n          this.body.height = 32;\n\n          this.game.camera.follow(this);\n\n          this.attacking = false;\n        }\n      }, this);\n    }\n  }\n\n  stepBack(direction) {\n    if(this.type === GLOBALS.PLAYER && this.attacking) {\n      return;\n    }\n\n    const timeoutTime = (this.type === GLOBALS.PLAYER) ? 150 : 200;\n\n    this.body.velocity.x = 0;\n    this.body.velocity.y = 0;\n\n    switch(direction) {\n      case GLOBALS.DIRECTIONS.UP:\n        this.body.velocity.y = -250;\n        break;\n\n      case GLOBALS.DIRECTIONS.DOWN:\n        this.body.velocity.y = 250;\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        this.body.velocity.x = -250;\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        this.body.velocity.x = 250;\n        break;\n    }\n\n    this.animations.stop();\n\n    setTimeout(() => {\n      this.body.velocity.x = 0;\n      this.body.velocity.y = 0;\n    }, timeoutTime);\n  }\n\n  receiveAttack(character) {\n    const frame = character.lastFrame || 0,\n          direction = this.getDirection(frame);\n\n    let damage = 0;\n\n    if(!this.receivingAttack) {\n      this.receivingAttack = true;\n\n      const dexModifier = (character.type === GLOBALS.PLAYER) ? (character.dexterity / 5) : 0;\n      const bonus = Math.floor(Math.random() * (10 - 1)) + 1;\n      const miss = Math.floor(Math.random() * (7 - 1)) + 1 - dexModifier;\n\n      if(character.characterClass === GLOBALS.SWORDSMAN || character.type === GLOBALS.ENEMY) {\n        damage = (character.strength * 2) + bonus;\n      } else if (character.characterClass === GLOBALS.ARCHER) {\n        damage = (character.dexterity * 1.25) + bonus;\n      }\n\n      this.textY = 12;\n\n      this.constitutionXP += 0.25;\n\n      if(this.constitutionXP >= 100) {\n        this.constitution += 1;\n        this.constitutionXP = 0;\n      }\n\n      if(miss > 4) {\n        if(this.text) {\n          this.text.text = 'miss';\n        } else {\n          this.text = this.game.add.text(0, 0, 'miss', GLOBALS.TEXT_STYLES.DAMAGE);\n          this.text.anchor.set(0.5);\n        }\n\n        if(this.type === GLOBALS.PLAYER) {\n          this.dexterityXP += 0.5;\n\n          if(this.dexterityXP >= 100) {\n            this.dexterity += 1;\n            this.dexterityXP = 0;\n          }\n        }\n      } else {\n        this.currentHealth = this.currentHealth - damage;\n\n        if(character.characterClass === GLOBALS.ARCHER) {\n          character.dexterityXP += 0.5;\n\n          if(character.dexterityXP >= 100) {\n            character.dexterity++;\n            character.dexterityXP = 0;\n          }\n        } else if (character.characterClass === GLOBALS.SWORDSMAN) {\n          character.strengthXP += 0.5;\n\n          if(character.strengthXP >= 100) {\n            character.strength++;\n            character.strengthXP = 0;\n          }\n        }\n\n        if(this.text) {\n          if(this.currentHealth <= 0) {\n            this.text.text = 'dead!';\n          } else {\n            this.text.text = damage;\n          }\n        } else {\n          this.text = this.game.add.text(0, 0, damage, GLOBALS.TEXT_STYLES.DAMAGE);\n          this.text.anchor.set(0.5);\n        }\n\n        this.checkDeath(character);\n\n        if(this.alive) {\n          this.stepBack(direction);\n        }\n      }\n\n      if(this.type === GLOBALS.PLAYER) {\n        this.updateCharacterStatusFormbox();\n      } else {\n        character.updateCharacterStatusFormbox();\n      }\n\n      if(character.type === GLOBALS.ENEMY) {\n        setTimeout(() => {\n          character.attacking = false;\n        }, 800);\n      }\n\n      setTimeout(() => {\n        this.text.text = '';\n      }, 500);\n\n      setTimeout(() => {\n        this.receivingAttack = false;\n      }, 300);\n    }\n  }\n\n  checkQuests(character) {\n    if(this.characterClass === GLOBALS.ENEMIES.SLIME && character.quests.first.started) {\n      if(character.quests.first.counter !== 10) {\n        character.quests.first.counter += 1;\n      }\n    }\n\n    if(this.characterClass === GLOBALS.ENEMIES.MUSHROOM && character.quests.second.started) {\n      if(character.quests.second.counter !== 10) {\n        character.quests.second.counter += 1;\n      }\n    }\n  }\n\n  checkDeath(character) {\n    if(this.currentHealth <= 0) {\n      this.alive = false;\n\n      if(this.currentHealth < 0) {\n        this.currentHealth = 0;\n      }\n\n      if(this.type === GLOBALS.ENEMY) {\n        clearInterval(this.randomWalkInterval);\n        this.body.velocity.x = 0;\n        this.body.velocity.y = 0;\n        this.body.destroy();\n        this.kill();\n\n        this.checkQuests(character);\n\n        character.updateCharacterStatusFormbox();\n      } else if (this.type === GLOBALS.PLAYER) {\n        this.setupDeadAnimation();\n      }\n    }\n  }\n\n  getOppositeDirectionFrame(frame) {\n    switch(frame) {\n      case 0:\n        return 6;\n        break;\n\n      case 3:\n        return 9;\n        break;\n\n      case 6:\n        return 0;\n        break;\n\n      case 9:\n        return 3;\n        break;\n    }\n  }\n\n  checkProximity(character1, character2, threshold, saveDirection) {\n    const character1X = character1.body.x,\n          character1Y = character1.body.y,\n          character2X = character2.body.x,\n          character2Y = character2.body.y;\n\n    let verticalDirection,\n        verticalDistance,\n        horizontalDirection,\n        horizontalDistance;\n\n    if(((character1X >= (character2X - threshold)) && (character1X <= (character2X + threshold)))\n      && ((character1Y >= (character2Y - threshold)) && (character1Y <= (character2Y + threshold)))) {\n\n      if(saveDirection) {\n        if (character1Y <= (character2Y + threshold) && (character1Y < character2Y)) {\n          verticalDirection = GLOBALS.DIRECTIONS.DOWN;\n          verticalDistance = character2Y - character1Y;\n        } else if (character1Y >= (character2Y - threshold) && (character1Y > character2Y)) {\n          verticalDirection = GLOBALS.DIRECTIONS.UP;\n          verticalDistance = character1Y - character2Y;\n        }\n\n        if((character1X >= (character2X - threshold)) && (character1X < character2X)) {\n          horizontalDirection = GLOBALS.DIRECTIONS.RIGHT;\n          horizontalDistance = character2X - character1X;\n        } else if (character1X <= (character2X + threshold) && (character1X > character2X)) {\n          horizontalDirection = GLOBALS.DIRECTIONS.LEFT;\n          horizontalDistance = character1X - character2X;\n        }\n\n        if(verticalDistance > horizontalDistance) {\n          this.playerDirection = verticalDirection;\n        } else {\n          this.playerDirection = horizontalDirection;\n        }\n      } else {\n        this.playerDirection = null;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkPlayerPosition(player) {\n    const playerAsideProximity = (this.type === GLOBALS.ENEMY) ? 32 : 64,\n          playerProximity = (player.characterClass === GLOBALS.ARCHER) ? 260 : 160;\n\n    this.playerNear = this.checkProximity(this, player, playerProximity, this.isHostile);\n\n    this.playerAside = this.checkProximity(this, player, playerAsideProximity);\n\n    if(this.playerAside && this.type === GLOBALS.ENEMY) {\n      this.lastFrame = (this.getOppositeDirectionFrame(player.lastFrame));\n      this.frame = this.lastFrame;\n      this.animations.stop();\n\n      if(!this.attacking && player.alive) {\n        this.attacking = true;\n        player.receiveAttack(this);\n      }\n    }\n  }\n\n  saveCharacterStatus(mapName, cb = null) {\n    const characterId = localStorage.getItem('NWarriorCharID'),\n          url = config.apiURL+'characters/updateCharacter/'+characterId,\n          data = {\n            strength: this.strength,\n            strengthXP: this.strengthXP,\n            constitution: this.constitution,\n            constitutionXP: this.constitutionXP,\n            dexterity: this.dexterity,\n            dexterityXP: this.dexterityXP,\n            intelligence: this.intelligence,\n            intelligenceXP: this.intelligenceXP,\n            charisma: this.charisma,\n            charismaXP: this.charismaXP,\n            health: this.health,\n            currentHealth: this.currentHealth,\n            mana: this.mana,\n            currentMana: this.currentMana,\n            lastPositionX: this.x,\n            lastPositionY: this.y,\n            lastMap: mapName,\n            firstDialog: this.firstDialog,\n            gameTimeHours: this.gameTimeHours,\n            gameTimeMinutes: this.gameTimeMinutes,\n            quests: this.quests,\n            token: localStorage.getItem('NWarriorToken')\n          };\n\n    $.ajax({\n\t\t\ttype: \"put\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: (data) => {\n        this.updateCharacterStatusFormbox();\n\n        if(cb) {\n          cb();\n        }\n      }\n    });\n  }\n\n  updateCharacterStatusFormbox() {\n    const $characterStatusWrapper = $('.character-status__wrapper');\n\n\t\tUtils.getTemplate('characterStatus', (template) => {\n      $characterStatusWrapper.html('');\n\n      template = template.replace('{CharacterClass}', this.characterClass);\n      template = template.replace('{LastSaved}', Utils.formatDate(this.updatedAt));\n      template = template.replace('{Health}', this.health);\n      template = template.replace('{CurrentHealth}', this.currentHealth);\n      template = template.replace('{Strength}', this.strength);\n      template = template.replace('{StrengthXP}', this.strengthXP.toFixed(2));\n      template = template.replace('{Constitution}', this.constitution);\n      template = template.replace('{ConstitutionXP}', this.constitutionXP.toFixed(2));\n      template = template.replace('{Dexterity}', this.dexterity);\n      template = template.replace('{DexterityXP}', this.dexterityXP.toFixed(2));\n      template = template.replace('{ClassImg}', this.classNumber);\n\n      const firstQuest = (this.quests.first.started) ? this.quests.first.counter + '/10' : 'Quest not started';\n      const secondQuest = (this.quests.second.started) ? this.quests.second.counter + '/10' : 'Quest not started';\n\n      template = template.replace('{firstQuest}', firstQuest);\n      template = template.replace('{secondQuest}', secondQuest);\n\n      $characterStatusWrapper.append(template);\n\t\t});\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\n\nexport default class Dialog {\n  constructor(data, cb) {\n    this.data = data;\n    this.cb = cb;\n\n    this.$dialogWrapper = $('.dialog__wrapper');\n    this.$dialogName = $('.dialog__name');\n    this.$dialogText = this.$dialogWrapper.find('.dialog__text');\n\n    this.currentLine = 1;\n    this.numberOfLines = this.data.lines.length;\n\n    this.setup();\n    this.bind();\n  }\n\n  setup() {\n    this.$dialogName.html(this.data.name || \"\");\n    this.$dialogText.html(this.data.lines[0]);\n    this.$dialogWrapper.removeClass('hide');\n  }\n\n  bind() {\n    this.event = $(document).on('keydown', ev => {\n      const key = ev.keyCode;\n\n      if(key === GLOBALS.KEY_CODES.ENTER) {\n        this.nextLine();\n      }\n    });\n  }\n\n  nextLine() {\n    if(this.currentLine === this.numberOfLines) {\n      this.event.unbind('keydown');\n      $(document).unbind('keydown');\n\n      this.$dialogWrapper.addClass('hide');\n      this.cb();\n    } else {\n      this.currentLine++;\n      this.$dialogText.html(this.data.lines[this.currentLine - 1]);\n    }\n  }\n\n  kill() {\n    this.event.unbind('keydown');\n    $(document).unbind('keydown');\n\n    this.$dialogWrapper.addClass('hide');\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\r\nimport config from 'config';\r\nimport Utils from '../core/Utils';\r\n\r\nexport default class Map {\r\n  constructor(game, options) {\r\n    this.options = options;\r\n\r\n    this.isCity = options.isCity;\r\n    this.isHouse = options.isHouse;\r\n\r\n    this.game = game;\r\n    this.tilemap = this.game.add.tilemap(this.options.map);\r\n\r\n    const gameWidth = this.tilemap.widthInPixels;\r\n\t  const\tgameHeight = this.tilemap.heightInPixels;\r\n\r\n\t  this.game.world.setBounds(0, 0, gameWidth, gameHeight);\r\n\r\n    this.tilemap.addTilesetImage('sprites_background_32x32_v3', 'sprites_background_32x32_v3');\r\n\r\n    this.groundLayer = this.tilemap.createLayer('Ground');\r\n    this.groundOverlapLayer = this.tilemap.createLayer('Ground_overlap');\r\n    this.collideLayer = this.tilemap.createLayer('Collide');\r\n\r\n    this.tilemap.currentLayer = 3;\r\n\r\n    this.tilemap.setCollisionBetween(1, 10000, true, this.collideLayer);\r\n  }\r\n\r\n  renderLastLayer() {\r\n    this.passLayer = this.tilemap.createLayer('Pass');\r\n    this.groundLayer.resizeWorld();\r\n    this.groundOverlapLayer.resizeWorld();\r\n    this.collideLayer.resizeWorld();\r\n    this.passLayer.resizeWorld();\r\n  }\r\n\r\n  addMapTransition(x, y, w, h, callback) {\r\n    this.tilemap.setTileLocationCallback(x, y, w, h, callback, this, this.groundLayer);\r\n  }\r\n}\r\n",
    "import * as states from '../states';\r\n\r\nexport default class StartGame {\r\n\tconstructor() {\r\n\t\tconst sizes = { w: 980, h: 470 };\r\n\r\n\t\tif(!localStorage.getItem('NWarriorToken')) {\r\n\t\t\twindow.location.assign('/');\r\n\t\t}\r\n\r\n\t\tthis.game = new Phaser.Game(sizes.w, sizes.h, Phaser.AUTO, 'phaser', null, false, false);\r\n\r\n\t\tObject.keys(states).forEach(state => this.game.state.add(state, states[state]));\r\n\r\n\t\tthis.game.state.start('Boot');\r\n\r\n\t\tthis.uiStyle();\r\n\t}\r\n\r\n\tuiStyle() {\r\n\t\t$('.ui-style').each(function() {\r\n\t\t\t$(this).append('<div class=\"ui-style__left-border\"></div><div class=\"ui-style__right-border\"></div><div class=\"ui-style__top-border\"></div><div class=\"ui-style__bottom-border\"></div><div class=\"ui-style__top-left-corner\"></div><div class=\"ui-style__top-right-corner\"></div><div class=\"ui-style__bottom-left-corner\"></div><div class=\"ui-style__bottom-right-corner\"></div>');\r\n\t\t});\r\n\t}\r\n}\r\n",
    "import Home from 'core/Home';\r\n\r\nclass Main {\r\n\tconstructor() {\r\n\t\tnew Home();\r\n\t}\r\n}\r\n\r\n$(document).ready(() => {\r\n\tnew Main();\r\n})\r\n",
    "import GLOBALS from '../core/Globals';\nimport Utils from '../core/Utils';\nimport config from 'config';\n\nexport default class Boot extends Phaser.State {\n\tpreload() {\n    this.setLoader();\n\n    //Player\n\t\tthis.game.load.spritesheet('SwordsMan', 'img/classes/swordman_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('SwordsMan_attack', 'img/classes/swordman_attack.png', 64, 64);\n\t\tthis.game.load.spritesheet('SwordsMan_sleep', 'img/classes/swordman_sleep.png', 64, 64);\n\t\tthis.game.load.spritesheet('SwordsMan_dead', 'img/classes/swordman_dead.png', 64, 64);\n\n\t\tthis.game.load.spritesheet('Archer', 'img/classes/archer_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('Archer_attack', 'img/classes/archer_attack.png', 64, 64);\n\t\tthis.game.load.spritesheet('Archer_sleep', 'img/classes/archer_sleep.png', 64, 64);\n\t\tthis.game.load.spritesheet('Archer_dead', 'img/classes/archer_dead.png', 64, 64);\n\n\t\tthis.game.load.spritesheet('Mage', 'img/classes/mage_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('Mage_sleep', 'img/classes/mage_sleep.png', 64, 64);\n\n\n    //Enemies\n\t\tthis.game.load.spritesheet(GLOBALS.ENEMIES.SLIME, 'img/enemies/slime-2.png', 32, 32);\n\t\tthis.game.load.spritesheet(GLOBALS.ENEMIES.MUSHROOM, 'img/enemies/mushroom-2.png', 32, 32);\n\n\n    //Maps\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_TOP_LEFT, 'tiles/forest_top_left.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_TOP_MIDDLE, 'tiles/forest_top_middle.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_TOP_RIGHT, 'tiles/forest_top_right.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_MIDDLE_LEFT, 'tiles/forest_middle_left.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_MIDDLE_RIGHT, 'tiles/forest_middle_right.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_BOTTOM_LEFT, 'tiles/forest_bottom_left.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_BOTTOM_MIDDLE, 'tiles/forest_bottom_middle.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_BOTTOM_RIGHT, 'tiles/forest_bottom_right.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.USELESS_CITY, 'tiles/useless_city.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.HOUSE_01, 'tiles/house_01.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.HOUSE_02, 'tiles/house_02.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.image('sprites_background_32x32_v3', 'tiles/sprites_background_32x32_v3.png');\n\n\n    //Objects\n    this.game.load.image('arrow', 'img/classes/arrow.png');\n\n\n    //Audios\n    this.game.load.audio('SadDescent', 'audio/SadDescent.ogg');\n    this.game.load.audio('SadTown', 'audio/SadTown.ogg');\n\t}\n\n\tcreate() {\n    this.getCharacterInfo();\n\t}\n\n\tsetLoader() {\n\t\tthis.loading = this.game.add.text(this.game.world.centerX, this.game.world.centerY, \"Loading...\", GLOBALS.TEXT_STYLES.LOADING);\n\n\t\tthis.loading.anchor.setTo(0.5);\n\t}\n\n  getCharacterInfo() {\n\t\tconst characterId = localStorage.getItem('NWarriorCharID'),\n          url = config.apiURL+'characters/'+characterId,\n          data = {};\n\n\t\tdata.token = localStorage.getItem('NWarriorToken');\n\n\t\t$.ajax({\n\t\t\ttype: \"get\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: (data) => {\n        data.classNumber = data.characterClass;\n      \tdata.characterClass = Utils.formatClass(data.characterClass);\n\n        const map = data.lastMap || 'UselessCity';\n\n        const options = {\n          characterData: data,\n          previousMap: false\n        }\n\n\t\t    this.game.state.start(Utils.humanize(map), true, false, options);\n\t\t\t}\n\t\t});\n\t}\n}\n",
    "import GLOBALS from '../core/Globals';\r\nimport MapState from './MapState';\r\n\r\nexport default class ForestBottomLeft extends MapState {\r\n  init(options) {\r\n    this.mapName = GLOBALS.MAPS.FOREST_BOTTOM_LEFT;\r\n\r\n    super.init(options);\r\n  }\r\n\r\n  addMapTransitions() {\r\n    super.addMapTransitions();\r\n\r\n    this.map.addMapTransition(21, 0, 18, 1, () => {\r\n      this.changeMap('ForestMiddleLeft', GLOBALS.DIRECTIONS.DOWN, 64);\r\n    }, this);\r\n\r\n    this.map.addMapTransition(39, 4, 1, 35, () => {\r\n      this.changeMap('ForestBottomMiddle', GLOBALS.DIRECTIONS.LEFT, 64);\r\n    }, this);\r\n  }\r\n}\r\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestBottomMiddle extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_BOTTOM_MIDDLE;\n\n    return super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(39, 3, 1, 35, () => {\n      this.changeMap('ForestBottomRight', GLOBALS.DIRECTIONS.LEFT, 64);\n    }, this);\n\n    this.map.addMapTransition(0, 3, 1, 35, () => {\n      this.changeMap('ForestBottomLeft', GLOBALS.DIRECTIONS.RIGHT, 64);\n    }, this);\n\n    this.map.addMapTransition(19, 2, 1, 1, () => {\n      this.changeMap('UselessCity', GLOBALS.DIRECTIONS.DOWN, 50);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\r\nimport MapState from './MapState';\r\n\r\nexport default class ForestBottomRight extends MapState {\r\n  init(options) {\r\n    this.mapName = GLOBALS.MAPS.FOREST_BOTTOM_RIGHT;\r\n\r\n    return super.init(options);\r\n  }\r\n\r\n  addMapTransitions() {\r\n    super.addMapTransitions();\r\n\r\n    this.map.addMapTransition(1, 0, 38, 1, () => {\r\n      this.changeMap('ForestMiddleRight', GLOBALS.DIRECTIONS.DOWN, 64);\r\n    }, this);\r\n\r\n    this.map.addMapTransition(0, 4, 1, 35, () => {\r\n      this.changeMap('ForestBottomMiddle', GLOBALS.DIRECTIONS.RIGHT, 64);\r\n    }, this);\r\n  }\r\n}\r\n",
    "import GLOBALS from '../core/Globals';\r\nimport MapState from './MapState';\r\n\r\nexport default class ForestMiddleLeft extends MapState {\r\n  init(options) {\r\n    this.mapName = GLOBALS.MAPS.FOREST_MIDDLE_LEFT;\r\n\r\n    super.init(options);\r\n  }\r\n\r\n  addMapTransitions() {\r\n    super.addMapTransitions();\r\n\r\n    this.map.addMapTransition(21, 0, 18, 1, () => {\r\n      this.changeMap('ForestTopLeft', GLOBALS.DIRECTIONS.DOWN, 64);\r\n    }, this);\r\n\r\n    this.map.addMapTransition(21, 39, 18, 1, () => {\r\n      this.changeMap('ForestBottomLeft', GLOBALS.DIRECTIONS.UP, 64);\r\n    }, this);\r\n  }\r\n}\r\n",
    "import GLOBALS from '../core/Globals';\r\nimport MapState from './MapState';\r\n\r\nexport default class ForestMiddleRight extends MapState {\r\n  init(options) {\r\n    this.mapName = GLOBALS.MAPS.FOREST_MIDDLE_RIGHT;\r\n\r\n    return super.init(options);\r\n  }\r\n\r\n  addMapTransitions() {\r\n    super.addMapTransitions();\r\n\r\n    this.map.addMapTransition(1, 0, 38, 1, () => {\r\n      this.changeMap('ForestTopRight', GLOBALS.DIRECTIONS.DOWN, 64);\r\n    }, this);\r\n\r\n    this.map.addMapTransition(1, 39, 38, 1, () => {\r\n      this.changeMap('ForestBottomRight', GLOBALS.DIRECTIONS.UP, 64);\r\n    }, this);\r\n  }\r\n}\r\n",
    "import GLOBALS from '../core/Globals';\r\nimport MapState from './MapState';\r\n\r\nexport default class ForestTopLeft extends MapState {\r\n  init(options) {\r\n    this.mapName = GLOBALS.MAPS.FOREST_TOP_LEFT;\r\n\r\n    return super.init(options);\r\n  }\r\n\r\n  create() {\r\n    super.create();\r\n  }\r\n\r\n  addMapTransitions() {\r\n    super.addMapTransitions();\r\n\r\n    this.map.addMapTransition(39, 4, 1, 35, () => {\r\n      this.changeMap('ForestTopMiddle', GLOBALS.DIRECTIONS.LEFT, 64);\r\n    }, this);\r\n\r\n    this.map.addMapTransition(21, 39, 18, 1, () => {\r\n      this.changeMap('ForestMiddleLeft', GLOBALS.DIRECTIONS.UP, 64);\r\n    }, this);\r\n  }\r\n}\r\n",
    "import GLOBALS from '../core/Globals';\r\nimport MapState from './MapState';\r\nimport Dialog from '../game/Dialog';\r\n\r\nexport default class ForestTopMiddle extends MapState {\r\n  init(options) {\r\n    this.mapName = GLOBALS.MAPS.FOREST_TOP_MIDDLE;\r\n\r\n    super.init(options);\r\n  }\r\n\r\n  create() {\r\n    super.create();\r\n  }\r\n\r\n  getPlayerPosition() {\r\n    return super.getPlayerPosition();\r\n  }\r\n\r\n  addMapTransitions() {\r\n    super.addMapTransitions();\r\n\r\n    this.map.addMapTransition(39, 4, 1, 35, () => {\r\n      this.changeMap('ForestTopRight', GLOBALS.DIRECTIONS.LEFT, 64);\r\n    }, this);\r\n\r\n    this.map.addMapTransition(0, 4, 1, 35, () => {\r\n      this.changeMap('ForestTopLeft', GLOBALS.DIRECTIONS.RIGHT, 64);\r\n    }, this);\r\n  }\r\n}\r\n",
    "import GLOBALS from '../core/Globals';\r\nimport MapState from './MapState';\r\n\r\nexport default class ForestTopRight extends MapState {\r\n   init(options) {\r\n    this.mapName = GLOBALS.MAPS.FOREST_TOP_RIGHT;\r\n\r\n    return super.init(options);\r\n  }\r\n\r\n  addMapTransitions() {\r\n    super.addMapTransitions();\r\n\r\n    this.map.addMapTransition(0, 4, 1, 35, () => {\r\n      this.changeMap('ForestTopMiddle', GLOBALS.DIRECTIONS.RIGHT, 64);\r\n    }, this);\r\n\r\n    this.map.addMapTransition(1, 39, 38, 1, () => {\r\n      this.changeMap('ForestMiddleRight', GLOBALS.DIRECTIONS.UP, 64);\r\n    }, this);\r\n  }\r\n}\r\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\nimport Character from '../game/Character';\n\nexport default class House01 extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.HOUSE_01;\n    this.isHouse = true;\n    this.isCity = true;\n\n    super.init(options);\n  }\n\n  create() {\n    super.create();\n\n    this.npcs.push(new Character(this.game, {\n      characterClass: GLOBALS.MAGE,\n      health: 70,\n      currentHealth: 70,\n      name: \"Livinho\",\n      quest: 'first',\n      speech: [\n        \"I have mission for you, can you please kill 10 slimes? If you do this, I can give you a reward!\"\n      ],\n      completedQuest: [\n        \"Congratulations! Take this reward in experience! (+1 in all attributes)\"\n      ]\n    }, GLOBALS.NPC, 155, 110, this.map));\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(4, 7, 1, 1, () => {\n      this.changeMap('UselessCity', GLOBALS.DIRECTIONS.UP, 0, {x: 464, y: 880});\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\nimport Character from '../game/Character';\n\nexport default class House02 extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.HOUSE_02;\n    this.isHouse = true;\n    this.isCity = true;\n\n    super.init(options);\n  }\n\n  create() {\n    super.create();\n\n    this.npcs.push(new Character(this.game, {\n      characterClass: GLOBALS.MAGE,\n      health: 70,\n      currentHealth: 70,\n      name: \"Kekel\",\n      quest: 'second',\n      speech: [\n        \"I have mission for you, can you please kill 10 mushrooms? If you do this, I can give you a reward!\",\n      ],\n      completedQuest: [\n        \"Congratulations! Take this reward in experience! (+1 in all attributes)\"\n      ]\n    }, GLOBALS.NPC, 175, 80, this.map));\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(4, 7, 1, 1, () => {\n      this.changeMap('UselessCity', GLOBALS.DIRECTIONS.UP, 0, {x: 912, y: 468});\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport config from 'config';\nimport Character from '../game/Character';\nimport Map from '../game/Map';\nimport Dialog from '../game/Dialog';\nimport Utils from '../core/Utils';\n\nexport default class MapState extends Phaser.State {\n  init(options) {\n    this.player = null;\n\n    this.game.stage.smoothing = false;\n\n    $(window).unbind('keydown');\n\n    if(!this.isCity) {\n      this.enemies = [];\n\n      this.music = this.game.add.audio(GLOBALS.MUSICS.SAD_DESCENT);\n      this.music.loop = true;\n    } else {\n      this.npcs = [];\n\n      this.music = this.game.add.audio(GLOBALS.MUSICS.SAD_TOWN);\n      this.music.loop = true;\n    }\n\n    this.options = options;\n\n    this.$overlayLoading = $('.game__wrapper__overlay--loading');\n    this.$overlayLoading.removeClass('active');\n\n    this.$overlayDead = $('.game__wrapper__overlay--grey');\n    this.$overlayDead.removeClass('active');\n\n    this.$saveText = $('.game-menu__message');\n\n    this.$gameTimeHours = $('.game__time-hours');\n    this.$gameTimeMinutes = $('.game__time-minutes');\n    this.$gameTimeType = $('.game__time-type');\n    this.$overlayNight = $('.game__wrapper__overlay--night');\n\n    this.$saveBtn = $('.game-menu__save-btn');\n    this.$autoSaveCheckbox = $('.game__option--autosave');\n    this.autoSave = (localStorage.getItem('NWarriorAutoSave') === 'true');\n\n    this.$saveBtn.unbind('click');\n\n    this.musicOn = (localStorage.getItem('NWarriorMusic') === 'true');\n    this.$musicCheckbox = $('.game__option--music');\n\n    this.controlsOn = (localStorage.getItem('NWarriorControls') === 'true');\n    this.$controlsCheckbox = $('.game__option--controls');\n\n    this.$autoSaveCheckbox.prop('checked', this.autoSave);\n    this.$musicCheckbox.prop('checked', this.musicOn);\n    this.$controlsCheckbox.prop('checked', this.controlsOn);\n\n    if(this.musicOn) {\n      if(this.music) {\n        this.music.volume = 0.3;\n        this.music.play();\n      }\n    }\n\n    this.shouldChangeMap = true;\n    this.deadDialog = false;\n\n    this.playerPositionThreshold = 32;\n  }\n\n  create() {\n    this.debug = false;\n\n\t\tthis.game.time.advancedTiming = true;\n\n    this.map = new Map(this.game, {map: this.mapName, isHouse: this.isHouse, isCity: this.isCity});\n\n    this.playerPosition = this.getPlayerPosition();\n\n    this.playerFirstPosition = this.playerPosition;\n\n    this.player = new Character(this.game, this.options.characterData, GLOBALS.PLAYER, this.playerPosition.x, this.playerPosition.y, this.map);\n\n    this.handleTime();\n\n    if(this.options.previousMap) {\n      this.player.turnSprite(this.playerInitialDirection);\n    }\n\n    if(!this.isCity) {\n      this.setupEnemies();\n    }\n\n    this.map.renderLastLayer();\n\n    this.addMapTransitions();\n\n    this.bind();\n\n    if(!this.player.firstDialog) {\n      this.welcome = new Dialog(\n        {\n          lines: [\n            \"Welcome to the ruthless, desolated and cute world of <strong>Nameless Warrior Beta</strong>!\",\n            \"If you have any suggestions or want to report any bug, please send me an email :D (andresan2006@gmail.com)\",\n            \"Go to the <strong>Status</strong> menu to see your character status. Go to <strong>Help</strong> to see the keyboard controls and the description of the status\"\n          ]\n        },\n        () => {\n          this.player.firstDialog = true;\n        }\n      );\n    }\n  }\n\n  setupEnemies() {\n    const enemyStrength = (this.player.characterClass === GLOBALS.ARCHER) ? 10 : 6;\n\n    this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.SLIME, isHostile: true, health: 70, currentHealth: 70, strength: enemyStrength, dexterity: 5}, GLOBALS.ENEMY, 450, 450, this.map));\n    this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.MUSHROOM, isHostile: true, health: 70, currentHealth: 70, strength: enemyStrength, dexterity: 5}, GLOBALS.ENEMY, 150, 150, this.map));\n    this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.SLIME, isHostile: true, health: 70, currentHealth: 70, strength: enemyStrength, dexterity: 5}, GLOBALS.ENEMY, 450, 950, this.map));\n    this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.MUSHROOM, isHostile: true, health: 70, currentHealth: 70, strength: enemyStrength, dexterity: 5}, GLOBALS.ENEMY, 550, 350, this.map));\n    this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.SLIME, isHostile: true, health: 70, currentHealth: 70, strength: enemyStrength, dexterity: 5}, GLOBALS.ENEMY, 750, 950, this.map));\n\n    if(this.player.characterClass === GLOBALS.ARCHER) {\n      this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.MUSHROOM, isHostile: true, health: 70, currentHealth: 70, strength: enemyStrength, dexterity: 5}, GLOBALS.ENEMY, 250, 650, this.map));\n    }\n  }\n\n\tupdate() {\n    if(!this.isCity) {\n      if(this.player.characterClass === GLOBALS.ARCHER) {\n        for (let arrow in this.player.arrows) {\n          if(this.player.arrows[arrow] !== null) {\n            this.game.physics.arcade.collide(this.player.arrows[arrow].object, this.enemies, (player, enemy) => {\n              player = (player.key === \"arrow\") ? this.player : player;\n\n              this.player.arrows[arrow].object.destroy();\n              this.player.arrows[arrow].destroyed = true;\n\n              this.collisionHandler(player, enemy);\n            });\n          }\n        }\n      } else {\n        this.game.physics.arcade.collide(this.player, this.enemies, this.collisionHandler);\n      }\n    }\n\n    if(this.player) {\n      this.game.physics.arcade.collide(this.player, this.map.collideLayer);\n      this.game.physics.arcade.collide(this.player, this.map.groundLayer);\n    }\n\n    if(this.enemies) {\n      for (let key in this.enemies) {\n        if(this.enemies[key].alive) {\n          this.game.physics.arcade.collide(this.enemies[key], this.map.collideLayer);\n\n          this.enemies[key].checkPlayerPosition(this.player);\n        }\n      }\n    }\n\n    if(this.npcs) {\n      this.game.physics.arcade.collide(this.player, this.npcs);\n\n      for (let key in this.npcs) {\n        this.npcs[key].checkPlayerPosition(this.player);\n\n        if(this.npcs[key].playerAside) {\n          this.npcAside = this.npcs[key];\n        } else {\n          this.npcAside = null;\n        }\n      }\n    }\n\n    if(!this.deadDialog && !this.player.alive) {\n      this.$overlayDead.addClass('active');\n\n      if(this.enemies) {\n        for (let key in this.enemies) {\n          clearInterval(this.enemies[key].randomWalkInterval);\n          this.enemies[key].kill();\n        }\n      }\n\n      this.deadDialog = new Dialog(\n        {\n          lines: [\n            \"You are dead! Like everything else in your life, you have failed!\"\n          ]\n        },\n        () => {\n          this.player.currentHealth = this.player.health;\n          this.player.saveCharacterStatus(this.mapName, () => {\n            setTimeout(() => {\n              this.changeMap('UselessCity', GLOBALS.DIRECTIONS.UP, 0, {x: 300, y: 300});\n            }, 1000);\n          });\n        }\n      );\n    }\n\t}\n\n\trender() {\n    this.game.debug.text('fps: '+this.game.time.fps || '--', 35, 20, \"#fff\");\n\n    if(this.player && this.debug) {\n        this.game.debug.bodyInfo(this.player, 32, 32);\n        this.game.debug.body(this.player);\n    }\n\n    if(this.enemies && this.debug) {\n      for (let key in this.enemies) {\n        const enemy = this.enemies[key];\n\n        this.game.debug.body(enemy);\n      }\n    }\n\t}\n\n  getPlayerPosition() {\n    if(this.options.previousMap) {\n      let initialPosition = 0,\n          position;\n\n      if(this.options.firstPositionThreshold) {\n        initialPosition += this.options.firstPositionThreshold;\n      }\n\n      switch(this.options.enterDirection) {\n        case GLOBALS.DIRECTIONS.UP:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.UP;\n          position = {x: this.options.playerLastPosition.x + 16, y: initialPosition}\n\n          break;\n\n        case GLOBALS.DIRECTIONS.DOWN:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.DOWN;\n          position =  {x: this.options.playerLastPosition.x + 16, y: this.map.tilemap.heightInPixels - initialPosition}\n\n          break;\n\n        case GLOBALS.DIRECTIONS.LEFT:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.RIGHT;\n          position = {x: initialPosition, y: this.options.playerLastPosition.y + 16}\n\n          break;\n\n        case GLOBALS.DIRECTIONS.RIGHT:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.LEFT;\n          position = {x: this.map.tilemap.widthInPixels - initialPosition, y: this.options.playerLastPosition.y + 16}\n\n          break;\n      }\n\n      if(this.options.enterPosition) {\n        return this.options.enterPosition;\n      } else {\n        return position;\n      }\n    } else {\n      if(this.options.characterData.lastPositionX !== 0) {\n        return {x: this.options.characterData.lastPositionX, y: this.options.characterData.lastPositionY};\n      } else {\n        return {x: 300, y: 300};\n      }\n    }\n  }\n\n  collisionHandler(player, enemy) {\n    if(player.attacking || player.characterClass === GLOBALS.ARCHER) {\n      enemy.receiveAttack(player);\n    }\n  }\n\n  bind() {\n    this.$helpLink = $('[data-target=\"#formbox-help\"]');\n    this.$statusLink = $('[data-target=\"#formbox-status\"]');\n\n    this.saveCharacterInterval = setInterval(() => {\n      if(this.autoSave) {\n        this.player.saveCharacterStatus(this.mapName, () => {\n          this.$saveText.removeClass('hide');\n\n          setTimeout(() => {\n            this.$saveText.addClass('hide');\n          }, 3000);\n        });\n      }\n    }, 10000);\n\n    this.player.updateCharacterStatusFormbox();\n\n    this.$saveBtn.on('click', () => {\n      this.player.saveCharacterStatus(this.mapName, () => {\n        this.$saveText.removeClass('hide');\n\n        setTimeout(() => {\n          this.$saveText.addClass('hide');\n        }, 3000);\n      });\n    });\n\n    this.$autoSaveCheckbox.change((e) => {\n      if(this.$autoSaveCheckbox.is(':checked')) {\n        this.autoSave = true;\n        localStorage.setItem('NWarriorAutoSave', true);\n      } else {\n        this.autoSave = false;\n        localStorage.setItem('NWarriorAutoSave', false);\n      }\n    });\n\n    this.$controlsCheckbox.change((e) => {\n      if(this.$controlsCheckbox.is(':checked')) {\n        this.controlsOn = true;\n        localStorage.setItem('NWarriorControls', true);\n      } else {\n        this.controlsOn = false;\n        localStorage.setItem('NWarriorControls', false);\n      }\n    });\n\n    this.$musicCheckbox.change((e) => {\n      if(this.$musicCheckbox.is(':checked')) {\n        this.musicOn = true;\n        localStorage.setItem('NWarriorMusic', true);\n\n        if(this.music) {\n          this.music.play();\n        }\n      } else {\n        this.musicOn = false\n        localStorage.setItem('NWarriorMusic', false);\n\n        if(this.music) {\n          this.music.stop();\n        }\n      }\n\n    });\n\n    this.timeInverval = setInterval(() => {\n      this.handleTime();\n    }, 5000);\n\n    $(window).on('keydown', ev => {\n      const key = ev.keyCode,\n            actionKey = (this.controlsOn) ? GLOBALS.KEY_CODES.L : GLOBALS.KEY_CODES.A;\n\n      switch(key) {\n        case actionKey:\n          if(!this.isCity) {\n            if(!this.player.attacking) {\n              this.player.attack();\n            }\n          } else if(this.npcAside && !this.npcAside.talking) {\n            this.npcAside.talk(this.player);\n          }\n\n          break;\n\n        case GLOBALS.KEY_CODES.ONE:\n          this.$statusLink.click();\n\n          break;\n\n        case GLOBALS.KEY_CODES.TWO:\n          this.$helpLink.click();\n\n          break;\n      }\n    });\n  }\n\n  addMapTransitions() {\n    this.willChangeMap = false;\n  }\n\n  killDialogs() {\n    if(this.welcome) {\n      this.welcome.kill();\n    }\n\n    if(this.deadDialog) {\n      this.deadDialog.kill();\n    }\n\n    for (let key in this.npcs) {\n      if(this.npcs[key].talking) {\n        this.npcs[key].talking.kill();\n      }\n    }\n  }\n\n  changeMap(state, enterDirection, threshold, enterPosition) {\n    if(!this.shouldChangeMap) {return;}\n\n    this.killDialogs();\n\n    setTimeout(() => {\n      this.$overlayLoading.addClass('active');\n      this.$overlayNight.removeClass('active');\n      this.$overlayDead.removeClass('active');\n    }, 50);\n\n    this.shouldChangeMap = false;\n    this.autoSave = false;\n\n    this.player.saveCharacterStatus(this.mapName, () => {\n      if(this.music) {\n        this.music.stop();\n        this.music = null;\n      }\n\n      clearInterval(this.saveCharacterInterval);\n      clearInterval(this.timeInverval);\n\n      for (let key in this.enemies) {\n        clearInterval(this.enemies[key].randomWalkInterval);\n      }\n\n      const playerCurrentPosition = {\n        x: this.player.body.x,\n        y: this.player.body.y\n      }\n\n      if(!this.willChangeMap) {\n        this.willChangeMap = true;\n\n        const characterId = localStorage.getItem('NWarriorCharID'),\n              url = config.apiURL+'characters/'+characterId,\n              data = {};\n\n        data.token = localStorage.getItem('NWarriorToken');\n\n        $.ajax({\n          type: \"get\",\n          url: url,\n          data: data,\n          success: (data) => {\n            data.classNumber = data.characterClass;\n      \t    data.characterClass = Utils.formatClass(data.characterClass);\n\n            const options = {\n              characterData: data,\n              previousMap: this.mapName,\n              enterDirection: enterDirection,\n              enterPosition: enterPosition,\n              playerLastPosition: playerCurrentPosition,\n              firstPositionThreshold: threshold\n            }\n\n            setTimeout(() => {\n              this.game.state.start(state, true, false, options);\n            }, 100);\n          }\n        });\n      }\n    });\n  }\n\n  handleTime() {\n    const hours = Utils.addZero(this.player.gameTimeHours),\n          minutes = Utils.addZero(this.player.gameTimeMinutes),\n          date = new Date();\n\n    date.setUTCHours(hours);\n    date.setUTCMinutes(minutes);\n\n    date.setUTCMinutes(date.getUTCMinutes() + 5);\n\n    this.player.gameTimeHours = Utils.addZero(date.getUTCHours());\n    this.player.gameTimeMinutes = Utils.addZero(date.getUTCMinutes());\n\n    this.$gameTimeHours.html(this.player.gameTimeHours);\n    this.$gameTimeMinutes.html(this.player.gameTimeMinutes);\n    this.$gameTimeType.html((this.player.gameTimeHours >= 12) ? 'PM' : 'AM');\n\n    if(!this.isHouse) {\n      this.setNightOverlay(this.player.gameTimeHours);\n    }\n  }\n\n  setNightOverlay(hours) {\n    if(hours >= 18 || hours <= 6) {\n      this.$overlayNight.addClass('active');\n\n      if(!this.isHouse) {\n        let opacity;\n\n        if(hours == 18) {\n          opacity = 0.25;\n        } else if(hours == 19) {\n          opacity = 0.40;\n        } else if (hours >= 20 || (hours >= 0 && hours <= 4)) {\n          opacity = 0.65;\n        } else if (hours == 5 || hours == 6) {\n          opacity = 0.35;\n        }\n\n        this.$overlayNight.css('opacity', opacity);\n      }\n    } else {\n      this.$overlayNight.removeClass('active');\n    }\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\nimport Character from '../game/Character';\n\nexport default class UselessCity extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.USELESS_CITY;\n    this.isCity = true;\n\n    super.init(options);\n  }\n\n  create() {\n    super.create();\n\n    let npcClass = (this.player.characterClass === GLOBALS.ARCHER) ? GLOBALS.SWORDSMAN : GLOBALS.ARCHER;\n\n    this.npcs.push(new Character(this.game, {\n      characterClass: npcClass,\n      health: 70,\n      currentHealth: 70,\n      name: \"Lan\",\n      speech: [\n        \"Hi, my name is Lan\",\n         \"Welcome to Useless City!\",\n         \"Why useless? Look around! This city is really useless, as this desolated world\"\n      ]\n    }, GLOBALS.NPC, 555, 1020, this.map));\n\n    this.npcs[0].turnSprite(GLOBALS.DIRECTIONS.RIGHT);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(19, 39, 4, 1, () => {\n      this.changeMap('ForestBottomMiddle', GLOBALS.DIRECTIONS.UP, 128);\n    }, this);\n\n    this.map.addMapTransition(14, 26, 1, 1, () => {\n      this.changeMap('House01', GLOBALS.DIRECTIONS.DOWN, 96, {x: 144, y: 200});\n    }, this);\n\n    this.map.addMapTransition(28, 13, 1, 1, () => {\n      this.changeMap('House02', GLOBALS.DIRECTIONS.DOWN, 96, {x: 144, y: 200});\n    }, this);\n  }\n}\n",
    "export {default as Boot} from './Boot';\r\nexport {default as ForestTopLeft} from './ForestTopLeft';\r\nexport {default as ForestTopMiddle} from './ForestTopMiddle';\r\nexport {default as ForestTopRight} from './ForestTopRight';\r\nexport {default as ForestMiddleLeft} from './ForestMiddleLeft';\r\nexport {default as ForestMiddleRight} from './ForestMiddleRight';\r\nexport {default as ForestBottomLeft} from './ForestBottomLeft';\r\nexport {default as ForestBottomMiddle} from './ForestBottomMiddle';\r\nexport {default as ForestBottomRight} from './ForestBottomRight';\r\nexport {default as UselessCity} from './UselessCity';\r\nexport {default as House01} from './House01';\r\nexport {default as House02} from './House02';\r\n"
  ]
}