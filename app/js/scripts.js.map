{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/js/config.json",
    "src/js/core/Boxes.js",
    "src/js/core/Globals.js",
    "src/js/core/Home.js",
    "src/js/core/Utils.js",
    "src/js/game/Character.js",
    "src/js/game/Dialog.js",
    "src/js/game/Map.js",
    "src/js/game/StartGame.js",
    "src/js/index.js",
    "src/js/states/Boot.js",
    "src/js/states/ForestBottomLeft.js",
    "src/js/states/ForestBottomMiddle.js",
    "src/js/states/ForestBottomRight.js",
    "src/js/states/ForestMiddleLeft.js",
    "src/js/states/ForestMiddleRight.js",
    "src/js/states/ForestTopLeft.js",
    "src/js/states/ForestTopMiddle.js",
    "src/js/states/ForestTopRight.js",
    "src/js/states/MapState.js",
    "src/js/states/UselessCity.js",
    "src/js/states/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "module.exports={\n\t\"apiURL\": \"http://localhost:8080/\"\n}\n",
    "/**\n* FormBoxes handling component\n*\n**/\nexport default class Boxes {\n\tconstructor(trigger, target) {\n\t\tthis.trigger = trigger;\n\t\tthis.target = target;\n\n\t\tthis.bindEvents();\n\t}\n\n\t//binds events to elements according to the selector passed as parameter\n\tbindEvents() {\n\t\tlet _this = this,\n\t\t\t\tboxes = $(this.trigger),\n\t\t\t\toverlay = $('.overlay');\n\n\t\tboxes.each(function() {\n\t\t\tlet href = $(this).data(\"target\"),\n\t\t\t\t\tactualSection = $(href),\n\t\t\t\t\tclose = actualSection.find('.formbox__close');\n\n\t\t\tclose.click((e) => {\n\t\t\t\te.preventDefault();\n\n\t\t\t\toverlay.addClass('hide');\n\t\t\t\tactualSection.removeClass('active');\n\t\t\t});\n\n\t\t\toverlay.click(() => {\n\t\t\t\toverlay.addClass('hide');\n\t\t\t\tactualSection.removeClass('active');\n\t\t\t});\n\n\t\t\t$(this).click((e) => {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t_this.closeAll();\n\n\t\t\t\toverlay.removeClass('hide');\n\n\t\t\t\tactualSection.addClass('active');\n\t\t\t});\n\t\t});\n\t}\n\n\tcloseAll() {\n\t\tlet boxes = $('.formbox');\n\n\t\tboxes.each(function() {\n\t\t\t$(this).removeClass('active');\n\t\t});\n\n\t\t$('.overlay').addClass('hide');\n\t}\n}\n",
    "const GLOBALS = {\n  PLAYER: 'player',\n  NPC: 'NPC',\n  ENEMY: 'enemy',\n\n  SWORDSMAN: 'SwordsMan',\n  MAGE: 'Mage',\n  ARCHER: 'Archer',\n\n  ENEMIES: {\n    SLIME: 'Slime',\n    MUSHROOM: 'Mushroom'\n  },\n\n  MAPS: {\n    FOREST_TOP_LEFT: 'forest_top_left',\n    FOREST_TOP_MIDDLE: 'forest_top_middle',\n    FOREST_TOP_RIGHT: 'forest_top_right',\n    FOREST_MIDDLE_LEFT: 'forest_middle_left',\n    FOREST_MIDDLE_RIGHT: 'forest_middle_right',\n    FOREST_BOTTOM_LEFT: 'forest_bottom_left',\n    FOREST_BOTTOM_MIDDLE: 'forest_bottom_middle',\n    FOREST_BOTTOM_RIGHT: 'forest_bottom_right',\n    USELESS_CITY: 'useless_city'\n  },\n\n  DIRECTIONS: {\n    UP: 'top',\n    DOWN: 'down',\n    LEFT: 'left',\n    RIGHT: 'right',\n    STOP: 'stop'\n  }\n}\n\nexport default GLOBALS;\n",
    "/**\n* Homepage handling component\n*\n**/\nimport config from 'config';\nimport Utils from './Utils';\nimport Boxes from './Boxes';\nimport StartGame from '../game/StartGame';\n\nexport default class Home {\n\tconstructor() {\n\t\tthis.boxes = new Boxes('.open-formbox', '.formbox');\n\n\t\tthis.formsSelector = \".form\";\n\n\t\tthis.menuNotLogged = $('.menu--not-logged');\n\t\tthis.loggedMenu = $('.menu--logged');\n\n\t\tthis.notLoggedText = $('.not-logged--text');\n\t\tthis.loggedText = $('.logged--text');\n\n\t\tthis.loggedInfo = $('.logged--info');\n\n    $('.tooltip').tooltipster({\n      contentAsHTML: true\n    });\n\n\t\tthis.bindEvents();\n\t\tthis.checkLogin();\n\t}\n\n\tbindEvents() {\n\t\tconst _this = this,\n\t\t\t\t  forms = $(this.formsSelector);\n\n\t\tforms.each(function() {\n\t\t\tconst form = $(this),\n            formTarget = form.data(\"target\"),\n            result = form.find('.formbox__result');\n\n\t\t\tform.submit(function(e) {\n\t\t\t\tconst data = Utils.serializeObject($(this));\n\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif(!_this.validation(formTarget, form, result)) {\n\t\t\t\t\t_this.ajaxPOST(formTarget, result, data);\n\t\t\t\t\t_this.cleanForms(form, formTarget, result);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$('.logout').click(function() {\n\t\t\t_this.logout();\n\t\t});\n\n\t\t$('.character__wrapper').on('click', '.character', function(e) {\n\t\t\tconst characterId = $(this).data('character-id');\n\n\t\t  localStorage.setItem('NWarriorCharID', characterId);\n\n\t\t\t_this.boxes.closeAll();\n\n\t\t\t$('.content').addClass('hide');\n\t\t\t$('.game__wrapper').removeClass('hide');\n\n\t\t\tnew StartGame();\n\t\t});\n\t}\n\n\tvalidation(target, form, result) {\n\t\tlet invalid = false;\n\n\t\tswitch(target) {\n\t\t\tcase 'users' :\n\t\t\t\tconst password = form.find('[name=signupPassword]').val(),\n\t\t\t\t\t\t  repeatPassword = form.find('[name=signupRepeatPassword]').val();\n\n\t\t\t  if (password != repeatPassword) {\n          result.html('The passwords must be equal!');\n          invalid = true;\n        }\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'characters':\n\t\t\t\tconst remainingStats = form.find('.remaining-stats').html(),\n              selectedClass = form.find('[name=\"characterClass\"]').val();\n\n\t\t\t\tif(selectedClass === \"\") {\n          result.html('You must select a character class!');\n\t\t\t\t\tinvalid = true;\n        } else if(remainingStats != 0) {\n\t\t\t\t\tresult.html('You must distribute all attributes!');\n\t\t\t\t\tinvalid = true;\n\t\t    }\n\n\t\t\t\tbreak;\n    }\n\n\t\treturn invalid;\n\t}\n\n\tcleanForms(form, target) {\n\t\tform.find('input[type=text]:not([readonly])').val('');\n\n\t\tswitch(target) {\n\t\t\tcase 'characters':\n\t\t\t\tform.find('.stats__input').val(5);\n\t\t\t\tform.find('.stats__counter').val(10);\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tajaxPOST(target, result, data) {\n\t\tconst _this = this,\n          loader = $('.loader'),\n          url = config.apiURL+target;\n\n\t\tloader.addClass('active');\n\n\t\tdata.token = localStorage.getItem('NWarriorToken');\n\n\t\t$.ajax({\n\t\t\ttype: \"POST\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: function(data) {\n\t\t    loader.removeClass('active');\n\n\t\t  \tif(data.failedAuth) {\n\t\t    \treturn _this.logout();\n\t\t    }\n\n\t\t    switch(target) {\n\t\t    \tcase 'users':\n\t\t    \t\t_this.handleSignUp(data, result);\n\t\t    \t\tbreak;\n\n\t\t    \tcase 'users/login':\n\t\t    \t\t_this.handleLogin(data, result);\n\t\t    \t\tbreak;\n\n\t\t    \tcase 'characters':\n\t\t    \t\t_this.handleCharacterCreation(data, result);\n\t\t    \t\tbreak;\n\t\t    }\n\t\t\t},\n\t\t\terror: function(xhr, errorType, error) {\n\t\t\t\tif(errorType == 403)\n\t\t\t\t\t_this.logout();\n\t\t\t}\n\t\t});\n\t}\n\n\thandleSignUp(data, result) {\n\t\tresult.html(data.message);\n\n\t\tif(data.created) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.boxes.closeAll();\n\t\t\t\t$('[data-target=\"#formbox-login\"]').click();\n\t\t\t}, 500);\n\t\t}\n\t}\n\n\thandleLogin(data, result) {\n\t\tresult.html(data.message);\n\n\t\tif(data.logged) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.boxes.closeAll();\n\t\t\t}, 500);\n\n\t\t\tthis.saveSession(data);\n\t\t\tthis.checkLogin();\n\t\t}\n\t}\n\n\tsaveSession(data) {\n\t\tlocalStorage.setItem('NWarriorUserID', data.userId);\n\t\tlocalStorage.setItem('NWarriorEmail', data.email);\n    localStorage.setItem('NWarriorToken', data.token);\n\t}\n\n\tcheckLogin() {\n\t\tif(localStorage.getItem('NWarriorToken')) {\n\t\t\tthis.loggedInfo.find('span').html(localStorage.getItem('NWarriorEmail'));\n\n\t\t\tthis.loggedMenu.removeClass('hide');\n\t\t\tthis.loggedText.removeClass('hide');\n\t\t\tthis.loggedInfo.removeClass('hide');\n\t\t\tthis.menuNotLogged.addClass('hide');\n\t\t\tthis.notLoggedText.addClass('hide');\n\n\t\t\tthis.setupCharacterCreation();\n\t\t\tthis.updateCharacterList();\n\t\t} else {\n\t\t\tthis.loggedMenu.addClass('hide');\n\t\t\tthis.loggedText.addClass('hide');\n\t\t\tthis.loggedInfo.addClass('hide');\n\t\t\tthis.menuNotLogged.removeClass('hide');\n\t\t\tthis.notLoggedText.removeClass('hide');\n\t\t}\n\t}\n\n\tsetupCharacterCreation() {\n\t\tconst form = $('[name=\"form_create\"]'),\n          selectedClass = form.find('[name=\"characterClass\"]'),\n          stats = form.find('.stats__group'),\n          remainingStats = form.find('.remaining-stats');\n\n\t\t$('.formbox__group__character').on('click', (e) => {\n      const currentClass = $(e.currentTarget),\n            classNumber = currentClass.data('characterClass');\n\n      $('.formbox__group__character').removeClass('active');\n      currentClass.addClass('active');\n      selectedClass.val(classNumber);\n    });\n\n\t\tstats.each(function() {\n\t\t\tconst\tstatsGroup = $(this),\n            plusButton = statsGroup.find('.stats__btn--plus'),\n            minusButton = statsGroup.find('.stats__btn--minus'),\n            statsInput = statsGroup.find('.stats__input');\n\n\t\t\tplusButton.click(function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tlet remainingStatsVal = remainingStats.html(),\n\t\t\t\t\t\tstatsVal = statsInput.val();\n\n\t\t\t\tif(remainingStatsVal > 0) {\n\t\t\t\t\tstatsVal++;\n\n\t\t\t\t\tstatsInput.val(statsVal);\n\n\t\t\t\t\tremainingStatsVal--;\n\n\t\t\t\t\tremainingStats.html(remainingStatsVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tminusButton.click(function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tlet remainingStatsVal = remainingStats.html(),\n\t\t\t\t\t\tstatsVal = statsInput.val();\n\n\t\t\t\tif(remainingStatsVal < 10 && statsVal > 5) {\n\t\t\t\t\tstatsVal--;\n\n\t\t\t\t\tstatsInput.val(statsVal);\n\t\t\t\t\tremainingStatsVal++;\n\n\t\t\t\t\tremainingStats.html(remainingStatsVal);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$('[name=userId]').val(localStorage.getItem('NWarriorUserID'));\n\t}\n\n\thandleCharacterCreation(data, result) {\n\t\tresult.html(data.message);\n\n\t\tsetTimeout(() => {\n\t\t\tthis.boxes.closeAll();\n\t\t\t$('[data-target=\"#formbox-select\"]').click();\n\t\t\tresult.html('');\n\t\t\t$('[name=characterClass]').val('');\n\t\t\t$('.create__img img').attr('src', '');\n\t\t}, 500);\n\n\t\tthis.updateCharacterList();\n\t}\n\n\tupdateCharacterList() {\n\t\tconst _this = this,\n          loader = $('.loader'),\n          userId = localStorage.getItem('NWarriorUserID'),\n          url = config.apiURL+'characters/byUser/'+userId,\n          characterList = $('.character__wrapper');\n\n\t\tloader.addClass('active');\n\n\t\t$('.character__wrapper > *').remove();\n\n\t\tUtils.getTemplate('characterSelection', function(template) {\n\t\t\tconst characterTemplate = template;\n\n\t\t  let\tdata = {};\n\n\t\t\tdata.token = localStorage.getItem('NWarriorToken');\n\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\ttype: \"get\",\n\t\t\t\tdata: data,\n\t\t\t\tsuccess: function(data) {\n\t\t\t    loader.removeClass('active');\n\n\t\t\t    if(data.length) {\n\t\t\t\t    for (let i in data) {\n\t\t\t\t    \tlet character = data[i],\n\t\t\t\t\t\t\t\t\ttemplate = characterTemplate;\n\n\t\t\t\t\t\t\ttemplate = template.replace('{CharacterClass}', Utils.formatClass(character.characterClass));\n\t\t\t\t\t\t\ttemplate = template.replace('{Strength}', character.strength);\n\t\t\t\t\t\t\ttemplate = template.replace('{Constitution}', character.constitution);\n\t\t\t\t\t\t\ttemplate = template.replace('{Dexterity}', character.dexterity);\n\t\t\t\t\t\t\ttemplate = template.replace('{Intelligence}', character.intelligence);\n\t\t\t\t\t\t\ttemplate = template.replace('{Charisma}', character.charisma);\n\t\t\t\t\t\t\ttemplate = template.replace('{ClassImg}', character.characterClass);\n\n\t\t\t\t\t\t\tcharacterList.append('<div class=\"character\" data-character-id=\"'+character._id+'\">'+template+'</div>');\n\t\t\t\t    }\n\t\t\t    } else {\n\t\t\t    \tcharacterList.append('<p>No characters found! Press \"New Character\" to create your first!</p>')\n\t\t\t    }\n\t\t\t  },\n\t\t\t\terror: function(xhr, errorType, error) {\n\t\t\t\t\t_this.logout();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tlogout() {\n\t\tlocalStorage.clear();\n\t\tlocation.reload();\n\t}\n}\n",
    "import GLOBALS from '../core/Globals';\n\nexport default class Utils {\n  static formatClass(characterClass) {\n    let classString;\n\n    switch(characterClass) {\n      case 1:\n        classString = GLOBALS.SWORDSMAN;\n        break;\n\n      case 2:\n        classString = GLOBALS.MAGE;\n        break;\n\n      case 3:\n        classString = GLOBALS.ARCHER;\n        break;\n    }\n\n    return classString;\n  }\n\n  static getTemplate(template, cb) {\n    $.get('templates/'+template+'.html', (response) => {\n      cb(response);\n    });\n  }\n\n  static serializeObject(obj) {\n    let o = {},\n        a = obj.serializeArray();\n\n    $.each(a, function() {\n      if (o[this.name]) {\n        if (!o[this.name].push) {\n            o[this.name] = [o[this.name]];\n        }\n        o[this.name].push(this.value || '');\n      } else {\n        o[this.name] = this.value || '';\n      }\n    });\n\n    return o;\n  };\n}\n",
    "import GLOBALS from '../core/Globals';\nimport config from 'config';\n\nexport default class Character extends Phaser.Sprite {\n\tconstructor(game, data, type = GLOBALS.PLAYER, x, y) {\n\t\tsuper(game, x, y, data.characterClass);\n\n    this.anchor.setTo(0.5, 0.5);\n\n    this.type = type;\n\n\t\tthis.setCharacterInfo(data);\n\n    if(this.type === GLOBALS.PLAYER) {\n      this.bind();\n    }\n\t}\n\n\tsetCharacterInfo(data) {\n\t\tthis.characterClass = data.characterClass;\n\n\t\tthis.str = data.strength;\n\t\tthis.con = data.constitution;\n\t\tthis.dex = data.dexterity;\n\t\tthis.int = data.intelligence;\n\t\tthis.cha = data.charisma;\n\n\t\tthis.HP = data.health;\n\t\tthis.currentHP = data.currentHealth;\n\t\tthis.MP = data.mana;\n\t\tthis.currentMP = data.currentMana;\n\n\t  this.frame = 0;\n\t  this.speed = 225;\n    this.alive = true;\n\n\t\tthis.create();\n\t}\n\n  bind() {\n    $(window).on('keydown', ev => {\n      const key = ev.key;\n\n      if(key === 'a' || key === 'A') {\n        if(!this.attacking) {\n          this.attack();\n        }\n      }\n    });\n\n    this.setupAttackEndCallback();\n  }\n\n\tcreate() {\n\t\tthis.game.add.existing(this);\n\t  this.game.physics.arcade.enable(this);\n\t  this.body.collideWorldBounds = true;\n\n    if(this.type === GLOBALS.PLAYER) {\n\t    this.game.camera.follow(this);\n    }\n\n\t  this.setupAnimations();\n\n    if(this.type === GLOBALS.ENEMY) {\n      this.body.immovable = true;\n      this.randomWalk();\n    }\n\t}\n\n\tupdate() {\n    if(this.type === GLOBALS.PLAYER) {\n      this.handleWalking();\n      this.updateBars();\n    }\n\n    if(this.type === GLOBALS.ENEMY && this.playerNear) {\n\n    }\n\t}\n\n\tupdateBars() {\n\t\tconst hpVal = $('.bar--health .bar__value'),\n          hpTxt = $('.bar--health .bar__text span'),\n          mpVal = $('.bar--mana .bar__value'),\n          mpTxt = $('.bar--mana .bar__text span');\n\n\t\thpTxt.html(this.currentHP+'/'+this.HP);\n\t\tmpTxt.html(this.currentMP+'/'+this.MP);\n\t}\n\n\thandleWalking() {\n\t  const speed = this.speed;\n\n\t  let direction;\n\n\t\tif (this.game.input.keyboard.isDown(Phaser.Keyboard.LEFT)) {\n\t    direction = GLOBALS.DIRECTIONS.LEFT;\n\t  } else if (this.game.input.keyboard.isDown(Phaser.Keyboard.RIGHT)) {\n\t    direction = GLOBALS.DIRECTIONS.RIGHT;\n\t  } else if (this.game.input.keyboard.isDown(Phaser.Keyboard.UP)) {\n\t    direction = GLOBALS.DIRECTIONS.UP;\n\t  } else if (this.game.input.keyboard.isDown(Phaser.Keyboard.DOWN)) {\n\t    direction = GLOBALS.DIRECTIONS.DOWN;\n\t  } else {\n\t    direction = GLOBALS.DIRECTIONS.STOP;\n\t  }\n\n    if(!this.attacking) {\n\t\t  this.walk(direction, speed);\n    } else {\n      this.body.velocity.x = 0;\n      this.body.velocity.y = 0;\n    }\n\t}\n\n\tsetupAnimations() {\n    if(this.type === GLOBALS.PLAYER) {\n      this.animations.add('dead', [0, 1, 2], 3, true);\n      this.animations.add(GLOBALS.DIRECTIONS.DOWN, [0, 1, 2], 10, false);\n      this.animations.add(GLOBALS.DIRECTIONS.RIGHT, [3, 4, 5], 10, false);\n      this.animations.add(GLOBALS.DIRECTIONS.UP, [6, 7, 8], 10, false);\n      this.animations.add(GLOBALS.DIRECTIONS.LEFT, [9, 10, 11], 10, false);\n    } else if (this.type === GLOBALS.ENEMY) {\n      this.animations.add(GLOBALS.DIRECTIONS.DOWN, [1, 2, 3], 10, true);\n      this.animations.add(GLOBALS.DIRECTIONS.RIGHT, [4, 5, 6], 10, true);\n      this.animations.add(GLOBALS.DIRECTIONS.UP, [7, 8, 9], 10, true);\n      this.animations.add(GLOBALS.DIRECTIONS.LEFT, [10, 11, 12], 10, true);\n    }\n  }\n\n  turnSprite(direction) {\n    let frame;\n\n    switch(direction) {\n      case GLOBALS.DIRECTIONS.UP:\n        frame = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        frame = 3;\n        break;\n\n      case GLOBALS.DIRECTIONS.DOWN:\n        frame = 6;\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        frame = 9;\n        break;\n    }\n\n    this.frame = frame;\n  }\n\n  walk(direction, speed = 50) {\n    switch(direction){\n      case GLOBALS.DIRECTIONS.DOWN:\n        this.lastFrame = 0;\n        this.body.velocity.y = speed;\n        this.body.velocity.x = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        this.lastFrame = 3;\n        this.body.velocity.y = 0;\n        this.body.velocity.x = speed;\n        break;\n\n      case GLOBALS.DIRECTIONS.UP:\n        this.lastFrame = 6;\n        this.body.velocity.y = -speed;\n        this.body.velocity.x = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        this.lastFrame = 9;\n        this.body.velocity.x = -speed;\n        this.body.velocity.y = 0;\n        break;\n\n      case GLOBALS.DIRECTIONS.STOP:\n        if(!this.attacking) {\n          this.body.velocity.x = 0;\n          this.body.velocity.y = 0;\n          this.frame = this.lastFrame;\n          this.animations.stop();\n        }\n\n        break;\n    }\n\n    this.animations.play(direction);\n  }\n\n  attack() {\n    const frame = this.lastFrame || 0,\n          direction = this.getDirection(frame),\n          sprite = this.characterClass+'_attack';\n\n    this.loadTexture(sprite);\n    this.anchor.setTo(0.5, 0.5);\n\n    this.body.width = 64;\n    this.body.height = 64;\n\n    this.game.camera.follow(null);\n\n    this.attacking = true;\n\n    this.animations.play(direction);\n  }\n\n  getDirection(frame) {\n    switch(frame) {\n      case 0:\n        return GLOBALS.DIRECTIONS.DOWN;\n        break;\n\n      case 3:\n        return GLOBALS.DIRECTIONS.RIGHT;\n        break;\n\n      case 6:\n        return GLOBALS.DIRECTIONS.UP;\n        break;\n\n      case 9:\n        return GLOBALS.DIRECTIONS.LEFT;\n        break;\n    }\n  }\n\n  setupDeadAnimation() {\n    const sprite = this.characterClass+'_dead';\n\n    this.loadTexture(sprite);\n    this.anchor.setTo(0.5, 0.5);\n\n    this.body.width = 64;\n    this.body.height = 64;\n\n    this.animations.play('dead');\n  }\n\n  randomWalk(speed = 100) {\n    this.randomWalkInterval = setInterval(() => {\n      const direction = Math.floor(Math.random() * (6 - 1)) + 1;\n\n      if(this.playerNear) {\n        this.findPlayer();\n      }\n\n      if(!this.receivingAttack && !this.playerNear && this.alive) {\n        switch(direction){\n          case 1:\n            this.walk(GLOBALS.DIRECTIONS.DOWN, speed);\n            break;\n\n          case 2:\n            this.walk(GLOBALS.DIRECTIONS.UP, speed);\n            break;\n\n          case 3:\n            this.walk(GLOBALS.DIRECTIONS.LEFT, speed);\n            break;\n\n          case 4:\n            this.walk(GLOBALS.DIRECTIONS.RIGHT, speed);\n            break;\n\n          case 5:\n            this.walk(GLOBALS.DIRECTIONS.STOP, speed);\n            break;\n        }\n      }\n    }, 800);\n  }\n\n  findPlayer() {\n\n  }\n\n  setupAttackEndCallback() {\n    for (const id in this.animations._anims) {\n      const anim = this.animations._anims[id];\n\n      anim.onComplete.add(() => {\n        if(this.attacking) {\n          this.loadTexture(this.characterClass);\n\n          this.anchor.setTo(0.5, 0.5);\n\n          this.body.width = 32;\n          this.body.height = 32;\n\n          this.game.camera.follow(this);\n\n          this.attacking = false;\n        }\n      }, this);\n    }\n  }\n\n  stepBack(direction) {\n    this.body.velocity.x = 0;\n    this.body.velocity.y = 0;\n\n    switch(direction) {\n      case GLOBALS.DIRECTIONS.UP:\n        this.body.velocity.y = -250;\n        break;\n\n      case GLOBALS.DIRECTIONS.DOWN:\n        this.body.velocity.y = 250;\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        this.body.velocity.x = -250;\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        this.body.velocity.x = 250;\n        break;\n    }\n\n    this.animations.stop();\n\n    setTimeout(() => {\n      this.body.velocity.x = 0;\n      this.body.velocity.y = 0;\n    }, 500);\n  }\n\n  receiveAttack(character) {\n    const frame = character.lastFrame || 0,\n          direction = this.getDirection(frame);\n\n    if(!this.receivingAttack) {\n      this.receivingAttack = true;\n\n      this.currentHP = this.currentHP - (character.str * 2);\n\n      if(this.currentHP <= 0) {\n        this.alive = false;\n\n        if(this.type === GLOBALS.ENEMY) {\n          clearInterval(this.randomWalkInterval);\n          this.body.velocity.x = 0;\n          this.body.velocity.y = 0;\n        } else if (this.type === GLOBALS.PLAYER) {\n          this.setupDeadAnimation();\n        }\n      } else {\n        this.stepBack(direction);\n      }\n\n      setTimeout(() => {\n        this.receivingAttack = false;\n      }, 300);\n    }\n  }\n\n  checkPlayerPosition(player) {\n    const playerX = player.body.x,\n          playerY = player.body.y,\n          proximity = 100;\n\n    if((this.body.x <= (playerX - proximity)\n        || this.body.x <= (playerX + proximity)) && (this.body.y <= (playerY - proximity)\n        || this.body.y <= (playerY + proximity))) {\n      this.playerNear = true;\n    } else {\n      this.playerNear = false;\n    }\n  }\n}\n",
    "export default class Dialog {\n  constructor(data, cb) {\n    this.data = data;\n    this.cb = cb;\n\n    this.$dialogWrapper = $('.dialog__wrapper');\n    this.$dialogText = this.$dialogWrapper.find('.dialog__text');\n\n    this.actualLine = 1;\n    this.numberOfLines = this.data.lines.length;\n\n    this.setup();\n    this.bind();\n  }\n\n  setup() {\n    this.$dialogText.html(this.data.lines[0]);\n    this.$dialogWrapper.removeClass('hide');\n  }\n\n  bind() {\n    this.event = $(document).on('keydown', ev => {\n      const key = ev.key;\n\n      if(this.actualLine === this.numberOfLines) {\n        this.event.unbind();\n      }\n\n      if(key === 'Enter') {\n        this.nextLine();\n      }\n    });\n  }\n\n  nextLine() {\n    if(this.actualLine === this.numberOfLines) {\n      this.$dialogWrapper.addClass('hide');\n      this.cb();\n    } else {\n      this.actualLine++;\n      this.$dialogText.html(this.data.lines[this.actualLine - 1]);\n    }\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport config from 'config';\nimport Utils from '../core/Utils';\n\nexport default class Map {\n  constructor(game, options) {\n    this.options = options;\n\n    this.game = game;\n    this.tilemap = this.game.add.tilemap(this.options.map);\n\n    const gameWidth = this.tilemap.widthInPixels;\n\t  const\tgameHeight = this.tilemap.heightInPixels;\n\n\t  this.game.world.setBounds(0, 0, gameWidth, gameHeight);\n\n    this.tilemap.addTilesetImage('sprites_background_32x32_v3', 'sprites_background_32x32_v3');\n\n    this.groundLayer = this.tilemap.createLayer('Ground');\n    this.groundOverlapLayer = this.tilemap.createLayer('Ground_overlap');\n    this.collideLayer = this.tilemap.createLayer('Collide');\n\n    this.groundLayer.resizeWorld();\n    this.groundOverlapLayer.resizeWorld();\n    this.collideLayer.resizeWorld();\n\n    this.tilemap.currentLayer = 3;\n\n    this.tilemap.setCollisionBetween(1, 10000, true, this.collideLayer);\n  }\n\n  renderLastLayer() {\n    this.passLayer = this.tilemap.createLayer('Pass');\n    this.passLayer.resizeWorld();\n  }\n\n  addMapTransition(x, y, w, h, callback) {\n    this.tilemap.setTileLocationCallback(x, y, w, h, callback, this, this.groundLayer);\n  }\n}\n",
    "import * as states from '../states';\n\nexport default class StartGame {\n\tconstructor() {\n\t\tconst sizes = { w: 980, h: 470 };\n\n\t\tif(!localStorage.getItem('NWarriorToken')) {\n\t\t\twindow.location.assign('/');\n\t\t}\n\n\t\tthis.game = new Phaser.Game(sizes.w, sizes.h, Phaser.AUTO, 'phaser');\n\n\t\tObject.keys(states).forEach(state => this.game.state.add(state, states[state]));\n\n\t\tthis.game.state.start('Boot');\n\n\t\tthis.uiStyle();\n\t}\n\n\tuiStyle() {\n\t\t$('.ui-style').each(function() {\n\t\t\t$(this).append('<div class=\"ui-style__left-border\"></div><div class=\"ui-style__right-border\"></div><div class=\"ui-style__top-border\"></div><div class=\"ui-style__bottom-border\"></div><div class=\"ui-style__top-left-corner\"></div><div class=\"ui-style__top-right-corner\"></div><div class=\"ui-style__bottom-left-corner\"></div><div class=\"ui-style__bottom-right-corner\"></div>');\n\t\t});\n\t}\n}\n",
    "import Home from 'core/Home';\n\nclass Main {\n\tconstructor() {\n\t\tnew Home();\n\t}\n}\n\n$(document).ready(() => {\n\tnew Main();\n})\n",
    "import GLOBALS from '../core/Globals';\nimport Utils from '../core/Utils';\nimport config from 'config';\n\nexport default class Boot extends Phaser.State {\n\tpreload() {\n    this.setLoader();\n\n    //Player\n\t\tthis.game.load.spritesheet('SwordsMan', 'img/classes/swordman_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('SwordsMan_attack', 'img/classes/swordman_attack.png', 64, 64);\n\t\tthis.game.load.spritesheet('SwordsMan_sleep', 'img/classes/swordman_sleep.png', 64, 64);\n\t\tthis.game.load.spritesheet('SwordsMan_dead', 'img/classes/swordman_dead.png', 64, 64);\n\n\t\tthis.game.load.spritesheet('Archer', 'img/classes/archer_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('Archer_attack', 'img/classes/archer_attack.png', 64, 64);\n\t\tthis.game.load.spritesheet('Archer_sleep', 'img/classes/archer_sleep.png', 64, 64);\n\t\tthis.game.load.spritesheet('Archer_dead', 'img/classes/archer_dead.png', 64, 64);\n\n\t\tthis.game.load.spritesheet('Mage', 'img/classes/mage_walk.png', 32, 32);\n\t\tthis.game.load.spritesheet('Mage_attack', 'img/classes/mage_attack.png', 64, 64);\n\t\tthis.game.load.spritesheet('Mage_sleep', 'img/classes/mage_sleep.png', 64, 64);\n\t\tthis.game.load.spritesheet('Mage_dead', 'img/classes/mage_dead.png', 64, 64);\n\n\n    //Enemies\n\t\tthis.game.load.spritesheet(GLOBALS.ENEMIES.SLIME, 'img/enemies/slime.png', 32, 32);\n\t\tthis.game.load.spritesheet(GLOBALS.ENEMIES.MUSHROOM, 'img/enemies/mushroom.png', 32, 32);\n\n\n    //Maps\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_TOP_LEFT, 'tiles/forest_top_left.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_TOP_MIDDLE, 'tiles/forest_top_middle.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_TOP_RIGHT, 'tiles/forest_top_right.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_MIDDLE_LEFT, 'tiles/forest_middle_left.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_MIDDLE_RIGHT, 'tiles/forest_middle_right.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_BOTTOM_LEFT, 'tiles/forest_bottom_left.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_BOTTOM_MIDDLE, 'tiles/forest_bottom_middle.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.FOREST_BOTTOM_RIGHT, 'tiles/forest_bottom_right.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.tilemap(GLOBALS.MAPS.USELESS_CITY, 'tiles/useless_city.json', null, Phaser.Tilemap.TILED_JSON);\n    this.game.load.image('sprites_background_32x32_v3', 'tiles/sprites_background_32x32_v3.png');\n\t}\n\n\tcreate() {\n    this.getCharacterInfo();\n\t}\n\n\tsetLoader() {\n\t\tthis.loadingStyle = { font: \"18px FreePixel\", fill: \"#fff\"},\n\t\tthis.loading = this.game.add.text(this.game.world.centerX, this.game.world.centerY, \"Loading...\", this.loadingStyle);\n\n\t\tthis.loading.anchor.setTo(0.5);\n\t}\n\n  getCharacterInfo() {\n\t\tconst characterId = localStorage.getItem('NWarriorCharID'),\n          url = config.apiURL+'characters/'+characterId,\n          data = {};\n\n\t\tdata.token = localStorage.getItem('NWarriorToken');\n\n\t\t$.ajax({\n\t\t\ttype: \"get\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: (data) => {\n      \tdata.characterClass = Utils.formatClass(data.characterClass);\n        data.lastXPosition = 300;\n        data.lastYPosition = 300;\n\n        const options = {\n          characterData: data,\n          previousMap: false,\n          map: GLOBALS.MAPS.FOREST_TOP_LEFT\n        }\n\n\t\t    this.game.state.start('ForestTopLeft', true, false, options);\n\t\t\t}\n\t\t});\n\t}\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestMiddle extends MapState {\n  getPlayerPosition() {\n    if(this.options.previousMap) {\n      switch(this.options.previousMap) {\n        case GLOBALS.MAPS.FOREST_TOP_LEFT:\n          return {x: 750, y: 0};\n      }\n    } else {\n      return super.getPlayerPosition();\n    }\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(21, 0, 3, 1, () => {\n      if(!this.shouldChangeMap) {return;}\n\n      if(!this.willChangeMap) {\n        this.willChangeMap = true;\n\n        const options = {\n          characterData: this.options.characterData,\n          previousMap: GLOBALS.MAPS.FOREST_MIDDLE_LEFT,\n          map: GLOBALS.MAPS.FOREST_TOP_LEFT,\n          enterPosition: GLOBALS.DIRECTIONS.DOWN\n        }\n\n        setTimeout(() => {\n          this.game.state.start('ForestTopLeft', true, false, options);\n        }, 100);\n      }\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestMiddle extends MapState {\n  getPlayerPosition() {\n    if(this.options.previousMap) {\n      switch(this.options.previousMap) {\n        case GLOBALS.MAPS.FOREST_TOP_LEFT:\n          return {x: 750, y: 0};\n      }\n    } else {\n      return super.getPlayerPosition();\n    }\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(21, 0, 3, 1, () => {\n      if(!this.shouldChangeMap) {return;}\n\n      if(!this.willChangeMap) {\n        this.willChangeMap = true;\n\n        const options = {\n          characterData: this.options.characterData,\n          previousMap: GLOBALS.MAPS.FOREST_MIDDLE_LEFT,\n          map: GLOBALS.MAPS.FOREST_TOP_LEFT,\n          enterPosition: GLOBALS.DIRECTIONS.DOWN\n        }\n\n        setTimeout(() => {\n          this.game.state.start('ForestTopLeft', true, false, options);\n        }, 100);\n      }\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestMiddle extends MapState {\n  getPlayerPosition() {\n    if(this.options.previousMap) {\n      switch(this.options.previousMap) {\n        case GLOBALS.MAPS.FOREST_TOP_LEFT:\n          return {x: 750, y: 0};\n      }\n    } else {\n      return super.getPlayerPosition();\n    }\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(21, 0, 3, 1, () => {\n      if(!this.shouldChangeMap) {return;}\n\n      if(!this.willChangeMap) {\n        this.willChangeMap = true;\n\n        const options = {\n          characterData: this.options.characterData,\n          previousMap: GLOBALS.MAPS.FOREST_MIDDLE_LEFT,\n          map: GLOBALS.MAPS.FOREST_TOP_LEFT,\n          enterPosition: GLOBALS.DIRECTIONS.DOWN\n        }\n\n        setTimeout(() => {\n          this.game.state.start('ForestTopLeft', true, false, options);\n        }, 100);\n      }\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestMiddleLeft extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_MIDDLE_LEFT;\n\n    super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(21, 0, 18, 1, () => {\n      this.changeMap('ForestTopLeft', GLOBALS.DIRECTIONS.DOWN);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestMiddle extends MapState {\n  getPlayerPosition() {\n    if(this.options.previousMap) {\n      switch(this.options.previousMap) {\n        case GLOBALS.MAPS.FOREST_TOP_LEFT:\n          return {x: 750, y: 0};\n      }\n    } else {\n      return super.getPlayerPosition();\n    }\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(21, 0, 3, 1, () => {\n      if(!this.shouldChangeMap) {return;}\n\n      if(!this.willChangeMap) {\n        this.willChangeMap = true;\n\n        const options = {\n          characterData: this.options.characterData,\n          previousMap: GLOBALS.MAPS.FOREST_MIDDLE_LEFT,\n          map: GLOBALS.MAPS.FOREST_TOP_LEFT,\n          enterPosition: GLOBALS.DIRECTIONS.DOWN\n        }\n\n        setTimeout(() => {\n          this.game.state.start('ForestTopLeft', true, false, options);\n        }, 100);\n      }\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\nimport Dialog from '../game/Dialog';\n\nexport default class ForestTopLeft extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_TOP_LEFT;\n\n    return super.init(options);\n  }\n\n  create() {\n    super.create();\n\n    if(!this.welcomeDone) {\n      this.welcome = new Dialog(\n        {\n          lines: [\n            \"Welcome to <strong>Nameless Warrior Beta</strong>! Forgive me for any bugs (or don't)). (Press ENTER to advance)\",\n            \"Use the Arrow Keys to move your character! (Press ENTER to advance)\",\n            \"Use the <strong>\\\"A\\\"</strong> key to attack your enemies (Press ENTER to advance)\"\n          ]\n        },\n        () => {\n          this.welcomeDone = true;\n        }\n      );\n    }\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(39, 4, 1, 35, () => {\n      this.changeMap('ForestTopMiddle', GLOBALS.DIRECTIONS.LEFT);\n    }, this);\n\n    this.map.addMapTransition(21, 39, 18, 1, () => {\n      this.changeMap('ForestMiddleLeft', GLOBALS.DIRECTIONS.UP);\n    }, this);\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\nimport Dialog from '../game/Dialog';\n\nexport default class ForestTopMiddle extends MapState {\n  init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_TOP_MIDDLE;\n\n    super.init(options);\n  }\n\n  create() {\n    super.create();\n  }\n\n  getPlayerPosition() {\n    return super.getPlayerPosition();\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestTopRight extends MapState {\n   init(options) {\n    this.mapName = GLOBALS.MAPS.FOREST_TOP_RIGHT;\n\n    return super.init(options);\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport config from 'config';\nimport Character from '../game/Character';\nimport Map from '../game/Map';\n\nexport default class MapState extends Phaser.State {\n  init(options) {\n    this.options = options;\n\n    if(!this.options.previousMap) {\n      this.shouldChangeMap = true;\n    } else {\n      this.shouldChangeMap = false;\n    }\n\n    this.playerPositionThreshold = 32;\n\n    this.playerPosition = this.getPlayerPosition();\n    this.playerFirstPosition = this.playerPosition;\n  }\n\n  create() {\n    this.debug = false;\n\n\t\tthis.game.time.advancedTiming = true;\n\n    this.map = new Map(this.game, {map: this.mapName});\n\n    this.player = new Character(this.game, this.options.characterData, GLOBALS.PLAYER, this.playerPosition.x, this.playerPosition.y);\n\n    console.log(this.playerInitialDirection)\n\n    if(this.options.previousMap) {\n      this.player.turnSprite(this.playerInitialDirection);\n    }\n\n    this.enemies = [];\n\n    this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.SLIME, health: 70, currentHealth: 70}, GLOBALS.ENEMY, 450, 450));\n    this.enemies.push(new Character(this.game, {characterClass: GLOBALS.ENEMIES.MUSHROOM, health: 70, currentHealth: 70}, GLOBALS.ENEMY, 150, 150));\n\n    this.map.renderLastLayer();\n\n    this.addMapTransitions();\n\n    this.bind();\n  }\n\n\tupdate() {\n    this.game.physics.arcade.collide(this.player, this.enemies, this.collisionHandler);\n\n    if(this.options.previousMap) {\n      this.checkShouldChangeMap();\n    }\n\n    if(this.player) {\n      this.game.physics.arcade.collide(this.player, this.map.collideLayer);\n      this.game.physics.arcade.collide(this.player, this.map.groundLayer);\n    }\n\n    if(this.enemies) {\n      for (let key in this.enemies) {\n        if(this.enemies[key].alive) {\n          this.game.physics.arcade.collide(this.enemies[key], this.map.collideLayer);\n\n          this.enemies[key].checkPlayerPosition(this.player);\n        }\n      }\n    }\n\t}\n\n\trender() {\n    if(this.debug) {\n      this.game.debug.text(this.game.time.fps || '--', 10, 20, \"#fff\");\n\n      if(this.player && this.debug) {\n          this.game.debug.bodyInfo(this.player, 32, 32);\n          this.game.debug.body(this.player);\n      }\n\n      if(this.enemies && this.debug) {\n        for (let key in this.enemies) {\n          const enemy = this.enemies[key];\n\n          this.game.debug.body(enemy);\n        }\n      }\n    }\n\t}\n\n  getPlayerPosition() {\n    if(this.options.previousMap) {\n      switch(this.options.enterPosition) {\n        case GLOBALS.DIRECTIONS.UP:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.UP;\n          return {x: this.options.playerLastPosition.x + 16, y: 0}\n\n          break;\n\n        case GLOBALS.DIRECTIONS.DOWN:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.DOWN;\n          return {x: this.options.playerLastPosition.x + 16, y: this.map.tilemap.heightInPixels - 32}\n\n          break;\n\n        case GLOBALS.DIRECTIONS.LEFT:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.RIGHT;\n          return {x: 0, y: this.options.playerLastPosition.y + 16}\n\n          break;\n\n        case GLOBALS.DIRECTIONS.RIGHT:\n          this.playerInitialDirection = GLOBALS.DIRECTIONS.LEFT;\n          return {x: this.map.tilemap.widthInPixels - 32, y: this.options.playerLastPosition.y + 16}\n\n          break;\n      }\n    } else {\n      return {x: this.options.characterData.lastXPosition - 32, y: this.options.characterData.lastYPosition};\n    }\n  }\n\n  collisionHandler(player, enemy) {\n    if(player.attacking) {\n      enemy.receiveAttack(player);\n    }\n  }\n\n  bind() {\n    $('[name=debug-mode]').change((e) => {\n      const checkbox = $(e.currentTarget);\n\n      if(checkbox.is(':checked')) {\n        this.debug = true;\n      } else {\n        this.debug = false;\n      }\n    });\n  }\n\n  checkShouldChangeMap() {\n    const playerCurrentPosition = {\n      x: this.player.body.x,\n      y: this.player.body.y\n    }\n\n    switch(this.options.enterPosition) {\n      case GLOBALS.DIRECTIONS.UP:\n        if((this.playerFirstPosition.y + this.playerPositionThreshold) <= playerCurrentPosition.y) {\n          this.shouldChangeMap = true;\n        }\n\n        break;\n\n      case GLOBALS.DIRECTIONS.DOWN:\n        if((this.playerFirstPosition.y - this.playerPositionThreshold) >= playerCurrentPosition.y) {\n          this.shouldChangeMap = true;\n        }\n\n        break;\n\n      case GLOBALS.DIRECTIONS.LEFT:\n        if((this.playerFirstPosition.x + this.playerPositionThreshold) <= playerCurrentPosition.x) {\n          this.shouldChangeMap = true;\n        }\n\n        break;\n\n      case GLOBALS.DIRECTIONS.RIGHT:\n        if((this.playerFirstPosition.x + this.playerPositionThreshold) >= playerCurrentPosition.x) {\n          this.shouldChangeMap = true;\n        }\n\n        break;\n    }\n  }\n\n  addMapTransitions() {\n    this.willChangeMap = false;\n  }\n\n  changeMap(state, enterPosition) {\n    if(!this.shouldChangeMap) {return;}\n\n    const playerCurrentPosition = {\n      x: this.player.body.x,\n      y: this.player.body.y\n    }\n\n    if(!this.willChangeMap) {\n      this.willChangeMap = true;\n\n      const options = {\n        characterData: this.options.characterData,\n        previousMap: this.mapName,\n        enterPosition: enterPosition,\n        playerLastPosition: playerCurrentPosition\n      }\n\n      setTimeout(() => {\n        this.game.state.start(state, true, false, options);\n      }, 100);\n    }\n  }\n}\n",
    "import GLOBALS from '../core/Globals';\nimport MapState from './MapState';\n\nexport default class ForestMiddle extends MapState {\n  getPlayerPosition() {\n    if(this.options.previousMap) {\n      switch(this.options.previousMap) {\n        case GLOBALS.MAPS.FOREST_TOP_LEFT:\n          return {x: 750, y: 0};\n      }\n    } else {\n      return super.getPlayerPosition();\n    }\n  }\n\n  addMapTransitions() {\n    super.addMapTransitions();\n\n    this.map.addMapTransition(21, 0, 3, 1, () => {\n      if(!this.shouldChangeMap) {return;}\n\n      if(!this.willChangeMap) {\n        this.willChangeMap = true;\n\n        const options = {\n          characterData: this.options.characterData,\n          previousMap: GLOBALS.MAPS.FOREST_MIDDLE_LEFT,\n          map: GLOBALS.MAPS.FOREST_TOP_LEFT,\n          enterPosition: GLOBALS.DIRECTIONS.DOWN\n        }\n\n        setTimeout(() => {\n          this.game.state.start('ForestTopLeft', true, false, options);\n        }, 100);\n      }\n    }, this);\n  }\n}\n",
    "export {default as Boot} from './Boot';\nexport {default as ForestTopLeft} from './ForestTopLeft';\nexport {default as ForestTopMiddle} from './ForestTopMiddle';\nexport {default as ForestTopRight} from './ForestTopRight';\nexport {default as ForestMiddleLeft} from './ForestMiddleLeft';\nexport {default as ForestMiddleRight} from './ForestMiddleRight';\nexport {default as ForestBottomLeft} from './ForestBottomLeft';\nexport {default as ForestBottomMiddle} from './ForestBottomMiddle';\nexport {default as ForestBottomRight} from './ForestBottomRight';\nexport {default as UselessCity} from './UselessCity';\n"
  ]
}